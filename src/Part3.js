import React, { useState } from 'react';
import { ChevronRight, ChevronLeft, List, Hash, Layers } from 'lucide-react';

const CollectionsPresentation = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const slides = [
    {
      title: "Collections Framework",
      subtitle: "–ü–æ—Ç—É–∂–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö Java",
      content: (
        <div className="space-y-8">
          <div className="text-center">
            <div className="text-6xl mb-4">üì¶</div>
            <h2 className="text-4xl font-bold text-green-600 mb-4">Java Collections Framework</h2>
            <p className="text-xl text-gray-600">–Ñ–¥–∏–Ω–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –≥—Ä—É–ø–∞–º–∏ –æ–±'—î–∫—Ç—ñ–≤</p>
          </div>
          
          <div className="bg-green-50 p-6 rounded-lg border-l-4 border-green-500">
            <p className="text-lg text-gray-700">
              <strong>Collections Framework</strong> - —Ü–µ –Ω–∞–±—ñ—Ä —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ —Ç–∞ –∫–ª–∞—Å—ñ–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è, 
              –º–∞–Ω—ñ–ø—É–ª—è—Ü—ñ—ó —Ç–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –≥—Ä—É–ø –æ–±'—î–∫—Ç—ñ–≤ —è–∫ –¥–æ —î–¥–∏–Ω–æ–≥–æ —Ü—ñ–ª–æ–≥–æ.
            </p>
          </div>

          <div className="grid grid-cols-3 gap-4">
            <div className="bg-blue-50 p-4 rounded-lg text-center">
              <List className="mx-auto mb-2 text-blue-600" size={32} />
              <p className="font-semibold">List</p>
              <p className="text-sm text-gray-600">–£–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó</p>
            </div>
            <div className="bg-purple-50 p-4 rounded-lg text-center">
              <Hash className="mx-auto mb-2 text-purple-600" size={32} />
              <p className="font-semibold">Set</p>
              <p className="text-sm text-gray-600">–£–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏</p>
            </div>
            <div className="bg-orange-50 p-4 rounded-lg text-center">
              <Layers className="mx-auto mb-2 text-orange-600" size={32} />
              <p className="font-semibold">Map</p>
              <p className="text-sm text-gray-600">–ü–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è</p>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–Ü—î—Ä–∞—Ä—Ö—ñ—è Collections Framework",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-green-500 to-blue-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤</h3>
          </div>

          <div className="bg-gray-50 p-6 rounded-lg">
            <div className="font-mono text-sm space-y-1">
              <div className="font-bold text-blue-600">Iterable E</div>
              <div className="ml-4">‚Üì</div>
              <div className="ml-4 font-bold text-green-600">Collection E</div>
              <div className="ml-8">‚îú‚îÄ‚îÄ <span className="font-bold text-purple-600">List E</span> <span className="text-gray-500">(—É–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è, –¥–æ–∑–≤–æ–ª—è—î –¥—É–±–ª—ñ–∫–∞—Ç–∏)</span></div>
              <div className="ml-12">‚îÇ   ‚îú‚îÄ‚îÄ ArrayList</div>
              <div className="ml-12">‚îÇ   ‚îú‚îÄ‚îÄ LinkedList</div>
              <div className="ml-12">‚îÇ   ‚îî‚îÄ‚îÄ Vector (–∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π)</div>
              <div className="ml-8">‚îú‚îÄ‚îÄ <span className="font-bold text-orange-600">Set E</span> <span className="text-gray-500">(—É–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏)</span></div>
              <div className="ml-12">‚îÇ   ‚îú‚îÄ‚îÄ HashSet</div>
              <div className="ml-12">‚îÇ   ‚îú‚îÄ‚îÄ LinkedHashSet</div>
              <div className="ml-12">‚îÇ   ‚îî‚îÄ‚îÄ <span className="font-bold text-red-600">SortedSet E</span></div>
              <div className="ml-16">‚îÇ       ‚îî‚îÄ‚îÄ TreeSet</div>
              <div className="ml-8">‚îî‚îÄ‚îÄ <span className="font-bold text-yellow-600">Queue E</span> <span className="text-gray-500">(FIFO, –æ–±—Ä–æ–±–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤)</span></div>
              <div className="ml-12">    ‚îú‚îÄ‚îÄ PriorityQueue</div>
              <div className="ml-12">    ‚îî‚îÄ‚îÄ <span className="font-bold text-pink-600">Deque E</span></div>
              <div className="ml-16">        ‚îú‚îÄ‚îÄ ArrayDeque</div>
              <div className="ml-16">        ‚îî‚îÄ‚îÄ LinkedList</div>
            </div>
          </div>

          <div className="bg-blue-50 p-6 rounded-lg">
            <div className="font-mono text-sm space-y-1">
              <div className="font-bold text-blue-600">Map K,V</div>
              <div className="ml-4 text-gray-500">(–æ–∫—Ä–µ–º–∞ —ñ—î—Ä–∞—Ä—Ö—ñ—è, –Ω–µ extends Collection)</div>
              <div className="ml-4">‚îú‚îÄ‚îÄ HashMap</div>
              <div className="ml-4">‚îú‚îÄ‚îÄ LinkedHashMap</div>
              <div className="ml-4">‚îú‚îÄ‚îÄ Hashtable (–∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π)</div>
              <div className="ml-4">‚îî‚îÄ‚îÄ <span className="font-bold text-red-600">SortedMap K,V</span></div>
              <div className="ml-8">    ‚îî‚îÄ‚îÄ TreeMap</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–û—Å–Ω–æ–≤–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏",
      content: (
        <div className="space-y-5">
          <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
            <h4 className="font-bold text-blue-700 mb-3">Collection E</h4>
            <p className="text-gray-700 mb-3">–ö–æ—Ä–µ–Ω–µ–≤–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å—ñ—Ö –∫–æ–ª–µ–∫—Ü—ñ–π (–∫—Ä—ñ–º Map)</p>
            <div className="bg-white p-3 rounded font-mono text-sm">
              <code className="text-gray-800">
                <div>boolean add(E e);</div>
                <div>boolean remove(Object o);</div>
                <div>boolean contains(Object o);</div>
                <div>int size();</div>
                <div>void clear();</div>
                <div>Iterator E iterator();</div>
              </code>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-purple-50 p-4 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-2">List E</h4>
              <p className="text-sm text-gray-700 mb-2">–í–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –∑ –¥–æ—Å—Ç—É–ø–æ–º –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º</p>
              <div className="bg-white p-2 rounded font-mono text-xs">
                <code>
                  <div>E get(int index);</div>
                  <div>E set(int index, E element);</div>
                  <div>void add(int index, E element);</div>
                  <div>int indexOf(Object o);</div>
                </code>
              </div>
            </div>

            <div className="bg-orange-50 p-4 rounded-lg border-l-4 border-orange-500">
              <h4 className="font-bold text-orange-700 mb-2">Set E</h4>
              <p className="text-sm text-gray-700 mb-2">–ö–æ–ª–µ–∫—Ü—ñ—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤</p>
              <div className="bg-white p-2 rounded font-mono text-xs">
                <code>
                  <div>boolean add(E e);</div>
                  <div className="text-gray-500 text-xs mt-1">{'// –¢—ñ –∂ –º–µ—Ç–æ–¥–∏ —â–æ –π Collection'}</div>
                  <div className="text-gray-500 text-xs">{'// –∞–ª–µ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –Ω–µ –¥–æ–¥–∞—é—Ç—å—Å—è'}</div>
                </code>
              </div>
            </div>

            <div className="bg-green-50 p-4 rounded-lg border-l-4 border-green-500">
              <h4 className="font-bold text-green-700 mb-2">Queue E</h4>
              <p className="text-sm text-gray-700 mb-2">–ß–µ—Ä–≥–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤</p>
              <div className="bg-white p-2 rounded font-mono text-xs">
                <code>
                  <div>boolean offer(E e);</div>
                  <div>E poll();</div>
                  <div>E peek();</div>
                </code>
              </div>
            </div>

            <div className="bg-red-50 p-4 rounded-lg border-l-4 border-red-500">
              <h4 className="font-bold text-red-700 mb-2">Map K,V</h4>
              <p className="text-sm text-gray-700 mb-2">–ü–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è</p>
              <div className="bg-white p-2 rounded font-mono text-xs">
                <code>
                  <div>V put(K key, V value);</div>
                  <div>V get(Object key);</div>
                  <div>V remove(Object key);</div>
                  <div>Set K keySet();</div>
                  <div>Collection V values();</div>
                </code>
              </div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "ArrayList vs LinkedList",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-blue-500 to-purple-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">List: –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3 text-xl">ArrayList</h4>
              <p className="text-gray-700 mb-3">–î–∏–Ω–∞–º—ñ—á–Ω–∏–π –º–∞—Å–∏–≤. –®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º.</p>
              
              <div className="bg-white p-3 rounded mb-3">
                <p className="font-semibold text-gray-700 mb-2">–í–Ω—É—Ç—Ä—ñ—à–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:</p>
                <div className="font-mono text-xs text-gray-600">Object[] elementData;</div>
                <p className="text-sm text-gray-600 mt-2">–ó–±–µ—Ä—ñ–≥–∞—î –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ –º–∞—Å–∏–≤—ñ, –∑–±—ñ–ª—å—à—É—î —Ä–æ–∑–º—ñ—Ä –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ</p>
              </div>

              <div className="space-y-2 text-sm">
                <div className="bg-green-50 p-2 rounded">
                  <strong className="text-green-700">‚úì –®–≤–∏–¥–∫–æ:</strong>
                  <div className="text-gray-700">‚Ä¢ –î–æ—Å—Ç—É–ø –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º O(1)</div>
                  <div className="text-gray-700">‚Ä¢ –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫—ñ–Ω–µ—Ü—å O(1) –∞–º–æ—Ä—Ç–∏–∑–æ–≤–∞–Ω–æ</div>
                </div>
                <div className="bg-red-50 p-2 rounded">
                  <strong className="text-red-700">‚úó –ü–æ–≤—ñ–ª—å–Ω–æ:</strong>
                  <div className="text-gray-700">‚Ä¢ –í—Å—Ç–∞–≤–∫–∞/–≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ —Å–µ—Ä–µ–¥–∏–Ω–∏ O(n)</div>
                  <div className="text-gray-700">‚Ä¢ –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞ O(n)</div>
                </div>
              </div>

              <div className="bg-white p-3 rounded mt-3 font-mono text-xs">
                <div>List String list = new ArrayList();</div>
                <div>list.add("Java");</div>
                <div>String s = list.get(0);</div>
                <div>list.add(0, "Hi");</div>
              </div>
            </div>

            <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-3 text-xl">LinkedList</h4>
              <p className="text-gray-700 mb-3">–î–≤–æ–∑–≤'—è–∑–Ω–∏–π —Å–ø–∏—Å–æ–∫. –®–≤–∏–¥–∫–∞ –≤—Å—Ç–∞–≤–∫–∞/–≤–∏–¥–∞–ª–µ–Ω–Ω—è.</p>
              
              <div className="bg-white p-3 rounded mb-3">
                <p className="font-semibold text-gray-700 mb-2">–í–Ω—É—Ç—Ä—ñ—à–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:</p>
                <div className="font-mono text-xs text-gray-600">
                  <div>Node: item, next, prev</div>
                </div>
                <p className="text-sm text-gray-600 mt-2">–ö–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç - –æ–∫—Ä–µ–º–∏–π –æ–±'—î–∫—Ç –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏</p>
              </div>

              <div className="space-y-2 text-sm">
                <div className="bg-green-50 p-2 rounded">
                  <strong className="text-green-700">‚úì –®–≤–∏–¥–∫–æ:</strong>
                  <div className="text-gray-700">‚Ä¢ –í—Å—Ç–∞–≤–∫–∞ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫/–∫—ñ–Ω–µ—Ü—å O(1)</div>
                  <div className="text-gray-700">‚Ä¢ –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫—É/–∫—ñ–Ω—Ü—è O(1)</div>
                  <div className="text-gray-700">‚Ä¢ –†–µ–∞–ª—ñ–∑—É—î Deque</div>
                </div>
                <div className="bg-red-50 p-2 rounded">
                  <strong className="text-red-700">‚úó –ü–æ–≤—ñ–ª—å–Ω–æ:</strong>
                  <div className="text-gray-700">‚Ä¢ –î–æ—Å—Ç—É–ø –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º O(n)</div>
                  <div className="text-gray-700">‚Ä¢ –ë—ñ–ª—å—à–µ –ø–∞–º'—è—Ç—ñ (–ø–æ—Å–∏–ª–∞–Ω–Ω—è)</div>
                </div>
              </div>

              <div className="bg-white p-3 rounded mt-3 font-mono text-xs">
                <div>LinkedList String list = new LinkedList();</div>
                <div>list.addFirst("Hi");</div>
                <div>String s = list.get(100);</div>
                <div>list.removeFirst();</div>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800">üí° –ö–æ–ª–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:</p>
            <div className="grid grid-cols-2 gap-3 mt-2 text-sm">
              <div><strong>ArrayList:</strong> –±–∞–≥–∞—Ç–æ —á–∏—Ç–∞–Ω—å, —Ä—ñ–¥–∫—ñ—Å–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó</div>
              <div><strong>LinkedList:</strong> —á–∞—Å—Ç—ñ –≤—Å—Ç–∞–≤–∫–∏/–≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–∞ –ø–æ—á–∞—Ç–∫—É/–∫—ñ–Ω—Ü—ñ</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "HashSet vs TreeSet vs LinkedHashSet",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-orange-500 to-red-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Set: –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h3>
          </div>

          <div className="space-y-4">
            <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
              <h4 className="font-bold text-orange-700 mb-3 text-xl">HashSet</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-700 mb-3">–ë–∞–∑—É—î—Ç—å—Å—è –Ω–∞ HashMap. –ù–∞–π—à–≤–∏–¥—à–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è Set.</p>
                  <div className="bg-white p-3 rounded text-sm space-y-1">
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong></div>
                    <div>‚Ä¢ add, remove, contains: O(1)</div>
                    <div><strong>–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</strong></div>
                    <div>‚Ä¢ –ë–µ–∑ –ø–æ—Ä—è–¥–∫—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤</div>
                    <div>‚Ä¢ –î–æ–∑–≤–æ–ª—è—î null</div>
                    <div>‚Ä¢ –ü–æ—Ç—Ä—ñ–±–µ–Ω hashCode() —Ç–∞ equals()</div>
                  </div>
                </div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>Set String set = new HashSet();</div>
                  <div>set.add("Java");</div>
                  <div>set.add("Python");</div>
                  <div>set.add("Java");</div>
                  <div className="mt-2 text-gray-500">{'// –ü–æ—Ä—è–¥–æ–∫ –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∏–π'}</div>
                </div>
              </div>
            </div>

            <div className="bg-red-50 p-5 rounded-lg border-l-4 border-red-500">
              <h4 className="font-bold text-red-700 mb-3 text-xl">TreeSet</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-700 mb-3">–ë–∞–∑—É—î—Ç—å—Å—è –Ω–∞ TreeMap. –°–æ—Ä—Ç–æ–≤–∞–Ω–∏–π Set.</p>
                  <div className="bg-white p-3 rounded text-sm space-y-1">
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong></div>
                    <div>‚Ä¢ add, remove, contains: O(log n)</div>
                    <div><strong>–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</strong></div>
                    <div>‚Ä¢ –í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏</div>
                    <div>‚Ä¢ –ù–ï –¥–æ–∑–≤–æ–ª—è—î null</div>
                    <div>‚Ä¢ –ü–æ—Ç—Ä—ñ–±–µ–Ω Comparable –∞–±–æ Comparator</div>
                  </div>
                </div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>Set Integer set = new TreeSet();</div>
                  <div>set.add(5);</div>
                  <div>set.add(1);</div>
                  <div>set.add(3);</div>
                  <div className="mt-2 text-gray-500">{'// –ó–∞–≤–∂–¥–∏ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ: [1, 3, 5]'}</div>
                </div>
              </div>
            </div>

            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3 text-xl">LinkedHashSet</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-700 mb-3">HashSet + –∑–≤'—è–∑–Ω–∏–π —Å–ø–∏—Å–æ–∫. –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏.</p>
                  <div className="bg-white p-3 rounded text-sm space-y-1">
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong></div>
                    <div>‚Ä¢ add, remove, contains: O(1)</div>
                    <div><strong>–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</strong></div>
                    <div>‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏</div>
                    <div>‚Ä¢ –¢—Ä–æ—Ö–∏ –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ –∑–∞ HashSet</div>
                    <div>‚Ä¢ –ë—ñ–ª—å—à–µ –ø–∞–º'—è—Ç—ñ (–ø–æ—Å–∏–ª–∞–Ω–Ω—è)</div>
                  </div>
                </div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>Set String set = new LinkedHashSet();</div>
                  <div>set.add("Java");</div>
                  <div>set.add("Python");</div>
                  <div>set.add("C++");</div>
                  <div className="mt-2 text-gray-500">{'// –ü–æ—Ä—è–¥–æ–∫: [Java, Python, C++]'}</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –í–∏–±—ñ—Ä —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó Set:</p>
            <div className="grid grid-cols-3 gap-2 text-sm">
              <div><strong>HashSet:</strong> –Ω–∞–π—à–≤–∏–¥—à–∏–π</div>
              <div><strong>TreeSet:</strong> —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</div>
              <div><strong>LinkedHashSet:</strong> –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "HashMap vs TreeMap vs LinkedHashMap",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Map: –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h3>
          </div>

          <div className="space-y-4">
            <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-3 text-xl">HashMap</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-700 mb-3">–•–µ—à-—Ç–∞–±–ª–∏—Ü—è. –ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è Map.</p>
                  <div className="bg-white p-3 rounded text-sm space-y-1">
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong></div>
                    <div>‚Ä¢ get, put, remove: O(1)</div>
                    <div><strong>–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</strong></div>
                    <div>‚Ä¢ –ë–µ–∑ –ø–æ—Ä—è–¥–∫—É</div>
                    <div>‚Ä¢ –û–¥–∏–Ω null-–∫–ª—é—á</div>
                    <div>‚Ä¢ –ù–µ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–∞</div>
                  </div>
                </div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>Map String, Integer map = new HashMap();</div>
                  <div>map.put("Java", 1995);</div>
                  <div>map.put("Python", 1991);</div>
                  <div className="mt-2">Integer year = map.get("Java");</div>
                  <div>map.containsKey("Rust");</div>
                </div>
              </div>
            </div>

            <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
              <h4 className="font-bold text-green-700 mb-3 text-xl">TreeMap</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-700 mb-3">Red-Black –¥–µ—Ä–µ–≤–æ. –í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∞ Map.</p>
                  <div className="bg-white p-3 rounded text-sm space-y-1">
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong></div>
                    <div>‚Ä¢ get, put, remove: O(log n)</div>
                    <div><strong>–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</strong></div>
                    <div>‚Ä¢ –í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∫–ª—é—á—ñ</div>
                    <div>‚Ä¢ –ù–ï –¥–æ–∑–≤–æ–ª—è—î null-–∫–ª—é—á—ñ</div>
                    <div>‚Ä¢ –†–µ–∞–ª—ñ–∑—É—î NavigableMap</div>
                  </div>
                </div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>Map Integer, String map = new TreeMap();</div>
                  <div>map.put(3, "Three");</div>
                  <div>map.put(1, "One");</div>
                  <div>map.put(2, "Two");</div>
                  <div className="mt-2 text-gray-500">{'// –í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ: 1=One, 2=Two, 3=Three'}</div>
                </div>
              </div>
            </div>

            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3 text-xl">LinkedHashMap</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-700 mb-3">HashMap + –∑–≤'—è–∑–Ω–∏–π —Å–ø–∏—Å–æ–∫. –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ä—è–¥–æ–∫.</p>
                  <div className="bg-white p-3 rounded text-sm space-y-1">
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong></div>
                    <div>‚Ä¢ get, put, remove: O(1)</div>
                    <div><strong>–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</strong></div>
                    <div>‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏</div>
                    <div>‚Ä¢ –ê–±–æ –ø–æ—Ä—è–¥–æ–∫ –¥–æ—Å—Ç—É–ø—É</div>
                    <div>‚Ä¢ –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è LRU –∫–µ—à—É</div>
                  </div>
                </div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>Map String, Integer map = new LinkedHashMap();</div>
                  <div>map.put("First", 1);</div>
                  <div>map.put("Second", 2);</div>
                  <div>map.put("Third", 3);</div>
                  <div className="mt-2 text-gray-500">{'// –ü–æ—Ä—è–¥–æ–∫: First=1, Second=2, Third=3'}</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –í–∏–±—ñ—Ä —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó Map:</p>
            <div className="grid grid-cols-3 gap-2 text-sm">
              <div><strong>HashMap:</strong> —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –≤–∏–±—ñ—Ä</div>
              <div><strong>TreeMap:</strong> —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∫–ª—é—á–∞–º–∏</div>
              <div><strong>LinkedHashMap:</strong> –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "Queue —Ç–∞ Deque",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Queue: –ß–µ—Ä–≥–∏</h3>
          </div>

          <div className="bg-yellow-50 p-5 rounded-lg border-l-4 border-yellow-500">
            <h4 className="font-bold text-yellow-700 mb-3">Queue E - –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–µ—Ä–≥–∏</h4>
            <p className="text-gray-700 mb-3">FIFO (First In First Out) - –ø–µ—Ä—à–∏–π –ø—Ä–∏–π—à–æ–≤, –ø–µ—Ä—à–∏–π –≤–∏–π—à–æ–≤</p>
            <div className="bg-white p-4 rounded text-sm">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <div className="font-semibold text-green-600 mb-1">–í–∏–∫–∏–¥–∞—é—Ç—å exception:</div>
                  <div className="font-mono text-xs">boolean add(E e);</div>
                  <div className="font-mono text-xs">E remove();</div>
                  <div className="font-mono text-xs">E element();</div>
                </div>
                <div>
                  <div className="font-semibold text-blue-600 mb-1">–ü–æ–≤–µ—Ä—Ç–∞—é—Ç—å —Å–ø–µ—Ü. –∑–Ω–∞—á–µ–Ω–Ω—è:</div>
                  <div className="font-mono text-xs">boolean offer(E e);</div>
                  <div className="font-mono text-xs">E poll();</div>
                  <div className="font-mono text-xs">E peek();</div>
                </div>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
              <h4 className="font-bold text-orange-700 mb-3">PriorityQueue</h4>
              <p className="text-gray-700 mb-3">–ß–µ—Ä–≥–∞ –∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏. –ï–ª–µ–º–µ–Ω—Ç–∏ —Å–æ—Ä—Ç—É—é—Ç—å—Å—è.</p>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div>Queue Integer pq = new PriorityQueue();</div>
                <div>pq.offer(5);</div>
                <div>pq.offer(1);</div>
                <div>pq.offer(3);</div>
                <div className="mt-2">pq.poll(); // 1 (–º—ñ–Ω—ñ–º—É–º)</div>
                <div>pq.poll(); // 3</div>
                <div>pq.poll(); // 5</div>
              </div>
              <div className="bg-blue-50 p-2 rounded mt-2 text-xs">
                <div>‚è±Ô∏è O(log n) –¥–ª—è add/poll</div>
                <div>‚è±Ô∏è O(1) –¥–ª—è peek</div>
              </div>
            </div>

            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3">ArrayDeque</h4>
              <p className="text-gray-700 mb-3">–î–≤–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è —á–µ—Ä–≥–∞. –®–≤–∏–¥—à–∞ –∑–∞ Stack —ñ LinkedList.</p>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div>Deque String deque = new ArrayDeque();</div>
                <div className="mt-2 text-gray-500">{'// –Ø–∫ —á–µ—Ä–≥–∞ (FIFO):'}</div>
                <div>deque.offerLast("A");</div>
                <div>deque.pollFirst();</div>
                <div className="mt-2 text-gray-500">{'// –Ø–∫ —Å—Ç–µ–∫ (LIFO):'}</div>
                <div>deque.push("B");</div>
                <div>deque.pop();</div>
              </div>
              <div className="bg-green-50 p-2 rounded mt-2 text-xs">
                <div>‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∑–∞–º—ñ—Å—Ç—å Stack</div>
                <div>‚è±Ô∏è O(1) –¥–ª—è –æ–ø–µ—Ä–∞—Ü—ñ–π –∑ –æ–±–æ—Ö –∫—ñ–Ω—Ü—ñ–≤</div>
              </div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-red-500 to-orange-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Big O - —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü—ñ–π</h3>
          </div>

          <div className="bg-blue-50 p-5 rounded-lg">
            <h4 className="font-bold text-blue-700 mb-3">List —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h4>
            <div className="overflow-x-auto">
              <table className="w-full bg-white rounded text-sm">
                <thead>
                  <tr className="bg-blue-200">
                    <th className="p-2 text-left">–û–ø–µ—Ä–∞—Ü—ñ—è</th>
                    <th className="p-2 text-center">ArrayList</th>
                    <th className="p-2 text-center">LinkedList</th>
                  </tr>
                </thead>
                <tbody>
                  <tr className="border-b">
                    <td className="p-2">get(index)</td>
                    <td className="p-2 text-center bg-green-50 font-bold">O(1)</td>
                    <td className="p-2 text-center bg-red-50 font-bold">O(n)</td>
                  </tr>
                  <tr className="border-b">
                    <td className="p-2">add –≤ –∫—ñ–Ω–µ—Ü—å</td>
                    <td className="p-2 text-center bg-green-50 font-bold">O(1)*</td>
                    <td className="p-2 text-center bg-green-50 font-bold">O(1)</td>
                  </tr>
                  <tr className="border-b">
                    <td className="p-2">add(index, element)</td>
                    <td className="p-2 text-center bg-red-50 font-bold">O(n)</td>
                    <td className="p-2 text-center bg-red-50 font-bold">O(n)</td>
                  </tr>
                  <tr className="border-b">
                    <td className="p-2">addFirst</td>
                    <td className="p-2 text-center bg-red-50 font-bold">O(n)</td>
                    <td className="p-2 text-center bg-green-50 font-bold">O(1)</td>
                  </tr>
                  <tr>
                    <td className="p-2">contains</td>
                    <td className="p-2 text-center bg-red-50 font-bold">O(n)</td>
                    <td className="p-2 text-center bg-red-50 font-bold">O(n)</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <p className="text-xs text-gray-600 mt-2">* –∞–º–æ—Ä—Ç–∏–∑–æ–≤–∞–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å</p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-orange-50 p-5 rounded-lg">
              <h4 className="font-bold text-orange-700 mb-3">Set —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h4>
              <div className="overflow-x-auto">
                <table className="w-full bg-white rounded text-xs">
                  <thead>
                    <tr className="bg-orange-200">
                      <th className="p-2 text-left">–û–ø–µ—Ä–∞—Ü—ñ—è</th>
                      <th className="p-2">HashSet</th>
                      <th className="p-2">TreeSet</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr className="border-b">
                      <td className="p-2">add</td>
                      <td className="p-2 text-center bg-green-50">O(1)</td>
                      <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                    </tr>
                    <tr className="border-b">
                      <td className="p-2">contains</td>
                      <td className="p-2 text-center bg-green-50">O(1)</td>
                      <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                    </tr>
                    <tr>
                      <td className="p-2">–ü–æ—Ä—è–¥–æ–∫</td>
                      <td className="p-2 text-center">–ù–µ–º–∞—î</td>
                      <td className="p-2 text-center">–°–æ—Ä—Ç–æ–≤–∞–Ω—ñ</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>

            <div className="bg-purple-50 p-5 rounded-lg">
              <h4 className="font-bold text-purple-700 mb-3">Map —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó</h4>
              <div className="overflow-x-auto">
                <table className="w-full bg-white rounded text-xs">
                  <thead>
                    <tr className="bg-purple-200">
                      <th className="p-2 text-left">–û–ø–µ—Ä–∞—Ü—ñ—è</th>
                      <th className="p-2">HashMap</th>
                      <th className="p-2">TreeMap</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr className="border-b">
                      <td className="p-2">get</td>
                      <td className="p-2 text-center bg-green-50">O(1)</td>
                      <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                    </tr>
                    <tr className="border-b">
                      <td className="p-2">put</td>
                      <td className="p-2 text-center bg-green-50">O(1)</td>
                      <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                    </tr>
                    <tr>
                      <td className="p-2">–ü–æ—Ä—è–¥–æ–∫</td>
                      <td className="p-2 text-center">–ù–µ–º–∞—î</td>
                      <td className="p-2 text-center">–°–æ—Ä—Ç–æ–≤–∞–Ω—ñ</td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –õ–µ–≥–µ–Ω–¥–∞:</p>
            <div className="grid grid-cols-3 gap-2 text-sm">
              <div className="bg-green-50 p-2 rounded">O(1) - –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞</div>
              <div className="bg-yellow-50 p-2 rounded">O(log n) - –ª–æ–≥–∞—Ä–∏—Ñ–º</div>
              <div className="bg-red-50 p-2 rounded">O(n) - –ª—ñ–Ω—ñ–π–Ω–∞</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "Utility –∫–ª–∞—Å–∏: Collections",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-indigo-500 to-purple-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Collections - —Å—Ç–∞—Ç–∏—á–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏</h3>
          </div>

          <div className="bg-indigo-50 p-5 rounded-lg border-l-4 border-indigo-500">
            <h4 className="font-bold text-indigo-700 mb-3">–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</h4>
            <div className="bg-white p-4 rounded font-mono text-sm">
              <div>List Integer numbers = Arrays.asList(5, 2, 8, 1, 9);</div>
              <div className="mt-2">Collections.sort(numbers);</div>
              <div className="text-gray-500 text-xs">{'// [1, 2, 5, 8, 9]'}</div>
              <div className="mt-2">Collections.sort(numbers, Collections.reverseOrder());</div>
              <div className="text-gray-500 text-xs">{'// [9, 8, 5, 2, 1]'}</div>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
              <h4 className="font-bold text-green-700 mb-3">–ü–æ—à—É–∫</h4>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div>int index = Collections.binarySearch(list, 5);</div>
                <div className="mt-2">Integer max = Collections.max(list);</div>
                <div>Integer min = Collections.min(list);</div>
                <div className="mt-2">int freq = Collections.frequency(list, 5);</div>
              </div>
            </div>

            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3">–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—è</h4>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div>Collections.shuffle(list);</div>
                <div>Collections.reverse(list);</div>
                <div>Collections.fill(list, 0);</div>
                <div>Collections.copy(dest, src);</div>
                <div>Collections.replaceAll(list, 5, 10);</div>
              </div>
            </div>

            <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-3">–ù–µ–∑–º—ñ–Ω–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó</h4>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div>List String immutable = Collections.unmodifiableList(list);</div>
                <div className="mt-2 text-red-600 text-xs">{'// –°–ø—Ä–æ–±–∞ –∑–º—ñ–Ω–∏—Ç–∏ –≤–∏–∫–∏–Ω–µ Exception'}</div>
              </div>
            </div>

            <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
              <h4 className="font-bold text-orange-700 mb-3">–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω—ñ</h4>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div>List String syncList = Collections.synchronizedList(new ArrayList());</div>
                <div className="mt-2">Set Integer syncSet = Collections.synchronizedSet(new HashSet());</div>
              </div>
            </div>
          </div>

          <div className="bg-pink-50 p-5 rounded-lg">
            <h4 className="font-bold text-pink-700 mb-3">–ü–æ—Ä–æ–∂–Ω—ñ —Ç–∞ –æ–¥–Ω–æ–µ–ª–µ–º–µ–Ω—Ç–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó</h4>
            <div className="bg-white p-4 rounded font-mono text-sm">
              <div>List String empty = Collections.emptyList();</div>
              <div>Set Integer emptySet = Collections.emptySet();</div>
              <div className="mt-2">List String single = Collections.singletonList("One");</div>
              <div>Set Integer singleSet = Collections.singleton(42);</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–ü—ñ–¥—Å—É–º–æ–∫: Collections Framework",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-green-500 to-blue-500 text-white p-6 rounded-lg">
            <h3 className="text-3xl font-bold mb-4">–ö–ª—é—á–æ–≤—ñ –º–æ–º–µ–Ω—Ç–∏ Collections</h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3">List</h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚Ä¢ ArrayList - –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è</li>
                <li>‚Ä¢ LinkedList - –¥–ª—è –≤—Å—Ç–∞–≤–æ–∫</li>
                <li>‚Ä¢ –î–æ–∑–≤–æ–ª—è—î –¥—É–±–ª—ñ–∫–∞—Ç–∏</li>
                <li>‚Ä¢ –î–æ—Å—Ç—É–ø –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º</li>
              </ul>
            </div>

            <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
              <h4 className="font-bold text-orange-700 mb-3">Set</h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚Ä¢ HashSet - –Ω–∞–π—à–≤–∏–¥—à–∏–π</li>
                <li>‚Ä¢ TreeSet - —Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ</li>
                <li>‚Ä¢ LinkedHashSet - –ø–æ—Ä—è–¥–æ–∫</li>
                <li>‚Ä¢ –¢—ñ–ª—å–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏</li>
              </ul>
            </div>

            <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-3">Map</h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚Ä¢ HashMap - —Å—Ç–∞–Ω–¥–∞—Ä—Ç</li>
                <li>‚Ä¢ TreeMap - —Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∫–ª—é—á—ñ</li>
                <li>‚Ä¢ LinkedHashMap - –ø–æ—Ä—è–¥–æ–∫</li>
                <li>‚Ä¢ –ü–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è</li>
              </ul>
            </div>
          </div>

          <div className="bg-yellow-50 p-5 rounded-lg border border-yellow-400">
            <h4 className="font-bold text-yellow-700 mb-3">–Ø–∫ –≤–∏–±–∏—Ä–∞—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—é?</h4>
            <div className="space-y-2 text-sm text-gray-700">
              <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –≤–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω—ñ—Å—Ç—å? ‚Üí <strong>List</strong></div>
              <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω—ñ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏? ‚Üí <strong>Set</strong></div>
              <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω—ñ –ø–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è? ‚Üí <strong>Map</strong></div>
              <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–∞ —á–µ—Ä–≥–∞? ‚Üí <strong>Queue/Deque</strong></div>
              <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è? ‚Üí <strong>TreeSet/TreeMap</strong></div>
              <div>üî∏ –ù–∞–π—à–≤–∏–¥—à–∞ —à–≤–∏–¥–∫–æ–¥—ñ—è? ‚Üí <strong>ArrayList/HashSet/HashMap</strong></div>
            </div>
          </div>

          <div className="bg-green-50 p-5 rounded-lg">
            <h4 className="font-bold text-green-700 mb-3">–ü–∞–º'—è—Ç–∞–π—Ç–µ</h4>
            <ul className="space-y-2 text-gray-700">
              <li>‚úì –í—Å—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å Generics –¥–ª—è —Ç–∏–ø–æ–±–µ–∑–ø–µ–∫–∏</li>
              <li>‚úì HashMap/HashSet –Ω–∞–π—à–≤–∏–¥—à—ñ - O(1) –¥–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ –æ–ø–µ—Ä–∞—Ü—ñ–π</li>
              <li>‚úì TreeMap/TreeSet —Å–æ—Ä—Ç—É—é—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ - O(log n)</li>
              <li>‚úì ArrayList –∫—Ä–∞—â–µ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è, LinkedList –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ–π</li>
              <li>‚úì Collections —Ç–∞ Arrays - –∫–æ—Ä–∏—Å–Ω—ñ utility –∫–ª–∞—Å–∏</li>
            </ul>
          </div>

          <div className="text-center bg-blue-100 p-4 rounded-lg">
            <p className="text-lg font-semibold text-blue-800">
              –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –∫–æ–ª–µ–∫—Ü—ñ—ó = –≤–∏—Å–æ–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å! üöÄ
            </p>
          </div>
        </div>
      )
    }
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 p-8">
      <div className="max-w-6xl mx-auto">
        <div className="bg-white rounded-2xl shadow-2xl p-12 min-h-[700px] flex flex-col">
          <div className="mb-8">
            <h1 className="text-4xl font-bold text-gray-800 mb-2">{slides[currentSlide].title}</h1>
            {slides[currentSlide].subtitle && (
              <p className="text-lg text-gray-600">{slides[currentSlide].subtitle}</p>
            )}
            <div className="h-1 w-32 bg-gradient-to-r from-green-500 via-blue-500 to-purple-500 rounded mt-3"></div>
          </div>

          <div className="flex-grow overflow-y-auto">
            {slides[currentSlide].content}
          </div>

          <div className="flex justify-between items-center mt-8 pt-6 border-t">
            <button
              onClick={prevSlide}
              disabled={currentSlide === 0}
              className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-green-500 to-blue-500 text-white rounded-lg hover:from-green-600 hover:to-blue-600 disabled:from-gray-300 disabled:to-gray-300 disabled:cursor-not-allowed transition-all shadow-lg hover:shadow-xl"
            >
              <ChevronLeft size={20} />
              –ù–∞–∑–∞–¥
            </button>

            <div className="flex gap-2">
              {slides.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentSlide(index)}
                  className={`h-3 rounded-full transition-all ${
                    index === currentSlide
                      ? 'bg-gradient-to-r from-green-500 to-blue-500 w-8'
                      : 'bg-gray-300 hover:bg-gray-400 w-3'
                  }`}
                  title={`–°–ª–∞–π–¥ ${index + 1}`}
                />
              ))}
            </div>

            <button
              onClick={nextSlide}
              disabled={currentSlide === slides.length - 1}
              className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-green-500 to-blue-500 text-white rounded-lg hover:from-green-600 hover:to-blue-600 disabled:from-gray-300 disabled:to-gray-300 disabled:cursor-not-allowed transition-all shadow-lg hover:shadow-xl"
            >
              –í–ø–µ—Ä–µ–¥
              <ChevronRight size={20} />
            </button>
          </div>

          <div className="text-center mt-4 text-sm text-gray-500">
            –°–ª–∞–π–¥ {currentSlide + 1} –∑ {slides.length}
          </div>
        </div>
      </div>
    </div>
  );
};

export default CollectionsPresentation;