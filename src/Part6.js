import React, { useState } from 'react';
import { ChevronRight, ChevronLeft, AlertTriangle, CheckCircle, XCircle } from 'lucide-react';

const BestPracticesPresentation = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const slides = [
    {
      title: "Best Practices",
      subtitle: "–ù–∞–π–∫—Ä–∞—â—ñ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ç–∞ —Ç–∏–ø–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏",
      content: (
        <div className="space-y-8">
          <div className="text-center">
            <div className="text-6xl mb-4">‚ú®</div>
            <h2 className="text-4xl font-bold text-emerald-600 mb-4">Best Practices</h2>
            <p className="text-xl text-gray-600">–Ø–∫ –ø–∏—Å–∞—Ç–∏ —è–∫—ñ—Å–Ω–∏–π Java –∫–æ–¥</p>
          </div>
          
          <div className="bg-emerald-50 p-6 rounded-lg border-l-4 border-emerald-500">
            <p className="text-lg text-gray-700">
              –ó–Ω–∞–Ω–Ω—è —Ç–µ–æ—Ä—ñ—ó - —Ü–µ –¥–æ–±—Ä–µ, –∞–ª–µ –∑–Ω–∞–Ω–Ω—è —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏ —ó—ó –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ - —Ü–µ —â–µ –∫—Ä–∞—â–µ!
            </p>
          </div>

          <div className="grid grid-cols-3 gap-4">
            <div className="bg-green-50 p-4 rounded-lg text-center">
              <CheckCircle className="mx-auto mb-2 text-green-600" size={32} />
              <p className="font-semibold">–©–æ —Ä–æ–±–∏—Ç–∏</p>
              <p className="text-sm text-gray-600">–ü—Ä–∞–≤–∏–ª—å–Ω—ñ –ø—ñ–¥—Ö–æ–¥–∏</p>
            </div>
            <div className="bg-red-50 p-4 rounded-lg text-center">
              <XCircle className="mx-auto mb-2 text-red-600" size={32} />
              <p className="font-semibold">–ß–æ–≥–æ —É–Ω–∏–∫–∞—Ç–∏</p>
              <p className="text-sm text-gray-600">–¢–∏–ø–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏</p>
            </div>
            <div className="bg-yellow-50 p-4 rounded-lg text-center">
              <AlertTriangle className="mx-auto mb-2 text-yellow-600" size={32} />
              <p className="font-semibold">–ü—ñ–¥–≤–æ–¥–Ω—ñ –∫–∞–º–µ–Ω—ñ</p>
              <p className="text-sm text-gray-600">–ù–∞ —â–æ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É</p>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–í–∏–±—ñ—Ä –∫–æ–ª–µ–∫—Ü—ñ–π: List",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-blue-500 to-cyan-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">–ö–æ–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ ArrayList vs LinkedList</h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
              <h4 className="font-bold text-green-700 mb-3 flex items-center gap-2">
                <CheckCircle size={20} />
                –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ ArrayList
              </h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚úÖ –ö–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω —à–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º</li>
                <li>‚úÖ –ö–æ–ª–∏ –ø–µ—Ä–µ–≤–∞–∂–Ω–æ —á–∏—Ç–∞—î—Ç–µ –¥–∞–Ω—ñ</li>
                <li>‚úÖ –ö–æ–ª–∏ –¥–æ–¥–∞—î—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ –∫—ñ–Ω–µ—Ü—å</li>
                <li>‚úÖ –ö–æ–ª–∏ –ø–∞–º'—è—Ç—å –æ–±–º–µ–∂–µ–Ω–∞ (–º–µ–Ω—à–µ overhead)</li>
                <li>‚úÖ –£ 99% –≤–∏–ø–∞–¥–∫—ñ–≤ - —Ü–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –≤–∏–±—ñ—Ä</li>
              </ul>
              <div className="bg-white p-3 rounded font-mono text-xs mt-3">
                <div className="text-green-600">{'// –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚úì'}</div>
                <div>List&lt;String&gt; list = new ArrayList&lt;&gt;();</div>
                <div>list.add("item"); <span className="text-gray-500">{'// O(1)'}</span></div>
                <div>String s = list.get(0); <span className="text-gray-500">{'// O(1)'}</span></div>
              </div>
            </div>

            <div className="bg-red-50 p-5 rounded-lg border-l-4 border-red-500">
              <h4 className="font-bold text-red-700 mb-3 flex items-center gap-2">
                <XCircle size={20} />
                –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ LinkedList
              </h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚ö†Ô∏è –¢—ñ–ª—å–∫–∏ —è–∫—â–æ —á–∞—Å—Ç–æ –≤—Å—Ç–∞–≤–ª—è—î—Ç–µ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫</li>
                <li>‚ö†Ô∏è –¢—ñ–ª—å–∫–∏ —è–∫—â–æ —Ä–µ–∞–ª—ñ–∑—É—î—Ç–µ Queue/Deque</li>
                <li>‚ö†Ô∏è –ù–ï –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</li>
                <li>‚ùå –ù–ï –¥–ª—è –¥–æ—Å—Ç—É–ø—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º</li>
                <li>‚ùå –ë—ñ–ª—å—à–µ –ø–∞–º'—è—Ç—ñ (–æ–±'—î–∫—Ç–∏ Node)</li>
              </ul>
              <div className="bg-white p-3 rounded font-mono text-xs mt-3">
                <div className="text-red-600">{'// –ó–∞–∑–≤–∏—á–∞–π –ø–æ–≥–∞–Ω–æ ‚úó'}</div>
                <div>List&lt;String&gt; list = new LinkedList&lt;&gt;();</div>
                <div>String s = list.get(100); <span className="text-gray-500">{'// O(n) - –ø–æ–≤—ñ–ª—å–Ω–æ!'}</span></div>
              </div>
            </div>
          </div>

          <div className="bg-blue-50 p-5 rounded-lg">
            <h4 className="font-bold text-blue-700 mb-3">–ö–æ–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ LinkedList</h4>
            <div className="bg-white p-4 rounded font-mono text-xs">
              <div className="text-blue-600">{'// –Ø–∫ Queue/Deque - –¥–æ–±—Ä–µ ‚úì'}</div>
              <div>Deque&lt;String&gt; queue = new LinkedList&lt;&gt;();</div>
              <div>queue.addFirst("first"); <span className="text-gray-500">{'// O(1)'}</span></div>
              <div>queue.addLast("last"); <span className="text-gray-500">{'// O(1)'}</span></div>
              <div>String first = queue.pollFirst(); <span className="text-gray-500">{'// O(1)'}</span></div>
              <div className="mt-3 text-blue-600">{'// –ê–ª–µ –∫—Ä–∞—â–µ ArrayDeque!'}</div>
              <div>Deque&lt;String&gt; betterQueue = new ArrayDeque&lt;&gt;();</div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –ó–æ–ª–æ—Ç–µ –ø—Ä–∞–≤–∏–ª–æ:</p>
            <div className="text-gray-700">
              <strong>ArrayList</strong> - –∑–∞–≤–∂–¥–∏, —è–∫—â–æ –Ω–µ–º–∞—î —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–æ—ó –ø—Ä–∏—á–∏–Ω–∏ –¥–ª—è —ñ–Ω—à–æ–≥–æ.
              <strong>LinkedList</strong> - —Ä—ñ–¥–∫–æ, —Ç—ñ–ª—å–∫–∏ –¥–ª—è —á–µ—Ä–≥ (–∞–ª–µ –∫—Ä–∞—â–µ ArrayDeque).
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–í–∏–±—ñ—Ä –∫–æ–ª–µ–∫—Ü—ñ–π: Set —Ç–∞ Map",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">–Ø–∫–∏–π Set –∞–±–æ Map –≤–∏–±—Ä–∞—Ç–∏?</h3>
          </div>

          <div className="space-y-4">
            <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
              <h4 className="font-bold text-orange-700 mb-3">Set: HashSet vs TreeSet vs LinkedHashSet</h4>
              <div className="grid grid-cols-3 gap-3 text-sm">
                <div className="bg-white p-3 rounded">
                  <strong className="text-orange-600">HashSet</strong>
                  <div className="text-xs text-gray-600 mt-1">‚ö° –ù–∞–π—à–≤–∏–¥—à–∏–π O(1)</div>
                  <div className="text-xs text-gray-600">‚ùå –ù–µ–º–∞—î –ø–æ—Ä—è–¥–∫—É</div>
                  <div className="text-xs mt-2 text-green-600">‚úì –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º</div>
                </div>
                <div className="bg-white p-3 rounded">
                  <strong className="text-red-600">TreeSet</strong>
                  <div className="text-xs text-gray-600 mt-1">üê¢ –ü–æ–≤—ñ–ª—å–Ω—ñ—à–∏–π O(log n)</div>
                  <div className="text-xs text-gray-600">‚úì –í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ</div>
                  <div className="text-xs mt-2 text-blue-600">‚Üí –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</div>
                </div>
                <div className="bg-white p-3 rounded">
                  <strong className="text-blue-600">LinkedHashSet</strong>
                  <div className="text-xs text-gray-600 mt-1">‚ö° –®–≤–∏–¥–∫–∏–π O(1)</div>
                  <div className="text-xs text-gray-600">‚úì –ü–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏</div>
                  <div className="text-xs mt-2 text-blue-600">‚Üí –Ø–∫—â–æ –≤–∞–∂–ª–∏–≤–∏–π –ø–æ—Ä—è–¥–æ–∫</div>
                </div>
              </div>
            </div>

            <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-3">Map: HashMap vs TreeMap vs LinkedHashMap</h4>
              <div className="grid grid-cols-3 gap-3 text-sm">
                <div className="bg-white p-3 rounded">
                  <strong className="text-purple-600">HashMap</strong>
                  <div className="text-xs text-gray-600 mt-1">‚ö° –ù–∞–π—à–≤–∏–¥—à–∏–π O(1)</div>
                  <div className="text-xs text-gray-600">‚ùå –ù–µ–º–∞—î –ø–æ—Ä—è–¥–∫—É</div>
                  <div className="text-xs mt-2 text-green-600">‚úì –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º</div>
                </div>
                <div className="bg-white p-3 rounded">
                  <strong className="text-green-600">TreeMap</strong>
                  <div className="text-xs text-gray-600 mt-1">üê¢ –ü–æ–≤—ñ–ª—å–Ω—ñ—à–∏–π O(log n)</div>
                  <div className="text-xs text-gray-600">‚úì –í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∫–ª—é—á—ñ</div>
                  <div className="text-xs mt-2 text-blue-600">‚Üí –î–ª—è range queries</div>
                </div>
                <div className="bg-white p-3 rounded">
                  <strong className="text-blue-600">LinkedHashMap</strong>
                  <div className="text-xs text-gray-600 mt-1">‚ö° –®–≤–∏–¥–∫–∏–π O(1)</div>
                  <div className="text-xs text-gray-600">‚úì –ü–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏</div>
                  <div className="text-xs mt-2 text-blue-600">‚Üí –î–ª—è LRU cache</div>
                </div>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-green-50 p-5 rounded-lg">
              <h4 className="font-bold text-green-700 mb-3 flex items-center gap-2">
                <CheckCircle size={20} />
                –ü—Ä–∞–≤–∏–ª—å–Ω–æ
              </h4>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div className="text-green-600">{'// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –≤–∏–ø–∞–¥–∫–∏'}</div>
                <div>Set&lt;String&gt; set = new HashSet&lt;&gt;();</div>
                <div>Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();</div>
                <div className="mt-3 text-green-600">{'// –ö–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è'}</div>
                <div>Set&lt;Integer&gt; sorted = new TreeSet&lt;&gt;();</div>
                <div className="mt-3 text-green-600">{'// –î–ª—è LRU cache'}</div>
                <div>Map&lt;K, V&gt; lru = new LinkedHashMap&lt;&gt;(</div>
                <div className="ml-4">16, 0.75f, true);</div>
              </div>
            </div>

            <div className="bg-red-50 p-5 rounded-lg">
              <h4 className="font-bold text-red-700 mb-3 flex items-center gap-2">
                <XCircle size={20} />
                –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
              </h4>
              <div className="bg-white p-3 rounded font-mono text-xs">
                <div className="text-red-600">{'// –ù–µ–ø–æ—Ç—Ä—ñ–±–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å'}</div>
                <div>Set&lt;String&gt; set = new TreeSet&lt;&gt;();</div>
                <div className="text-gray-500">{'// –Ø–∫—â–æ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è'}</div>
                <div className="mt-3 text-red-600">{'// –ó–∞–π–≤–∞ –ø–∞–º\'—è—Ç—å'}</div>
                <div>Map&lt;String, Integer&gt; map = </div>
                <div className="ml-4">new LinkedHashMap&lt;&gt;();</div>
                <div className="text-gray-500">{'// –Ø–∫—â–æ –ø–æ—Ä—è–¥–æ–∫ –Ω–µ –≤–∞–∂–ª–∏–≤–∏–π'}</div>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –ü—Ä–∞–≤–∏–ª–æ:</p>
            <div className="space-y-1 text-sm text-gray-700">
              <div>üî∏ –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: <strong>HashMap/HashSet</strong></div>
              <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è: <strong>TreeMap/TreeSet</strong></div>
              <div>üî∏ –í–∞–∂–ª–∏–≤–∏–π –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏: <strong>LinkedHashMap/LinkedHashSet</strong></div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–¢–∏–ø–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏ –∑ Generics #1",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-red-500 to-orange-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Raw Types —Ç–∞ Type Erasure</h3>
          </div>

          <div className="bg-red-50 p-5 rounded-lg border-l-4 border-red-500">
            <h4 className="font-bold text-red-700 mb-3 flex items-center gap-2">
              <XCircle size={20} />
              –ü–æ–º–∏–ª–∫–∞ #1: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Raw Types
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ü–æ–≥–∞–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-red-600">{'// Raw type - –ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ!'}</div>
                  <div>List list = new ArrayList();</div>
                  <div>list.add("String");</div>
                  <div>list.add(123); <span className="text-gray-500">{'// –ö–æ–º–ø—ñ–ª—é—î—Ç—å—Å—è!'}</span></div>
                  <div className="mt-2">String s = (String) list.get(1);</div>
                  <div className="text-red-600">{'// Runtime Exception!'}</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –î–æ–±—Ä–µ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-green-600">{'// –ó Generics'}</div>
                  <div>List&lt;String&gt; list = new ArrayList&lt;&gt;();</div>
                  <div>list.add("String");</div>
                  <div>list.add(123); <span className="text-red-600">{'// –ü–æ–º–∏–ª–∫–∞ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó!'}</span></div>
                  <div className="mt-2">String s = list.get(0);</div>
                  <div className="text-green-600">{'// –ë–µ–∑–ø–µ—á–Ω–æ —ñ –±–µ–∑ casting'}</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
            <h4 className="font-bold text-orange-700 mb-3 flex items-center gap-2">
              <XCircle size={20} />
              –ü–æ–º–∏–ª–∫–∞ #2: –Ü–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è warnings
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ü–æ–≥–∞–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>@SuppressWarnings("unchecked")</div>
                  <div>public void badMethod() &#123;</div>
                  <div className="ml-4">List list = getList();</div>
                  <div className="ml-4 text-red-600">{'// –•–æ–≤–∞—î–º–æ –ø—Ä–æ–±–ª–µ–º—É!'}</div>
                  <div>&#125;</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –î–æ–±—Ä–µ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>public void goodMethod() &#123;</div>
                  <div className="ml-4">List&lt;String&gt; list = getList();</div>
                  <div className="ml-4 text-green-600">{'// –¢–∏–ø–æ–±–µ–∑–ø–µ—á–Ω–æ'}</div>
                  <div>&#125;</div>
                  <div className="mt-2">public List&lt;String&gt; getList() &#123;</div>
                  <div className="ml-4">return new ArrayList&lt;&gt;();</div>
                  <div>&#125;</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 p-5 rounded-lg border-l-4 border-yellow-500">
            <h4 className="font-bold text-yellow-700 mb-3 flex items-center gap-2">
              <AlertTriangle size={20} />
              –ü–æ–º–∏–ª–∫–∞ #3: Type Erasure confusion
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ù–µ –ø—Ä–∞—Ü—é—î:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-red-600">{'// Type erasure - —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—Ç—Ä–∞—á–∞—î—Ç—å—Å—è'}</div>
                  <div>if (list instanceof List&lt;String&gt;) &#123;</div>
                  <div className="ml-4 text-red-600">{'// –ü–æ–º–∏–ª–∫–∞ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó!'}</div>
                  <div>&#125;</div>
                  <div className="mt-3">new ArrayList&lt;String&gt;()[10];</div>
                  <div className="text-red-600">{'// –ù–µ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ generic'}</div>
                  <div className="mt-3">T obj = new T();</div>
                  <div className="text-red-600">{'// –ù–µ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ instance'}</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>if (list instanceof List) &#123;</div>
                  <div className="ml-4 text-green-600">{'// –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ç–∏–ø—É'}</div>
                  <div>&#125;</div>
                  <div className="mt-3">List&lt;String&gt;[] arr = new List[10];</div>
                  <div className="text-green-600">{'// –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞'}</div>
                  <div className="mt-3">public T create(Class&lt;T&gt; clazz) &#123;</div>
                  <div className="ml-4">return clazz.newInstance();</div>
                  <div>&#125;</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-blue-50 p-4 rounded-lg">
            <p className="font-semibold text-gray-800 mb-2">üí° –ü–∞–º'—è—Ç–∞–π—Ç–µ:</p>
            <ul className="space-y-1 text-sm text-gray-700">
              <li>‚úì –ó–∞–≤–∂–¥–∏ –≤–∫–∞–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∏–ø—É</li>
              <li>‚úì –ù–µ —ñ–≥–Ω–æ—Ä—É–π—Ç–µ compiler warnings</li>
              <li>‚úì –†–æ–∑—É–º—ñ–π—Ç–µ –æ–±–º–µ–∂–µ–Ω–Ω—è Type Erasure</li>
              <li>‚úì –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ diamond operator &lt;&gt;</li>
            </ul>
          </div>
        </div>
      )
    },
    {
      title: "–¢–∏–ø–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏ –∑ Generics #2",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-purple-500 to-blue-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Wildcards —Ç–∞ PECS</h3>
          </div>

          <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
            <h4 className="font-bold text-purple-700 mb-3 flex items-center gap-2">
              <XCircle size={20} />
              –ü–æ–º–∏–ª–∫–∞ #4: –ü–ª—É—Ç–∞–Ω–∏–Ω–∞ –∑ wildcards
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ù–µ –ø—Ä–∞—Ü—é—î:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>List&lt;?&gt; list = new ArrayList&lt;&gt;();</div>
                  <div>list.add("Hello");</div>
                  <div className="text-red-600">{'// –ü–æ–º–∏–ª–∫–∞! –ù–µ –º–æ–∂–Ω–∞ –¥–æ–¥–∞–≤–∞—Ç–∏'}</div>
                  <div className="mt-3">List&lt;? extends Number&gt; nums = ...</div>
                  <div>nums.add(1);</div>
                  <div className="text-red-600">{'// –ü–æ–º–∏–ª–∫–∞! Producer - —Ç—ñ–ª—å–∫–∏ —á–∏—Ç–∞–Ω–Ω—è'}</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>List&lt;String&gt; list = new ArrayList&lt;&gt;();</div>
                  <div>list.add("Hello");</div>
                  <div className="text-green-600">{'// OK - –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —Ç–∏–ø'}</div>
                  <div className="mt-3">List&lt;? super Integer&gt; nums = ...</div>
                  <div>nums.add(1);</div>
                  <div className="text-green-600">{'// OK - Consumer –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏'}</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
            <h4 className="font-bold text-blue-700 mb-3">PECS: Producer Extends, Consumer Super</h4>
            <div className="grid grid-cols-2 gap-4">
              <div className="bg-white p-3 rounded">
                <div className="text-blue-600 font-semibold mb-2">Producer - —á–∏—Ç–∞—î–º–æ –¥–∞–Ω—ñ</div>
                <div className="font-mono text-xs">
                  <div>public void process(</div>
                  <div className="ml-4">List&lt;? extends Number&gt; numbers) &#123;</div>
                  <div className="ml-8 text-green-600">{'// –ú–æ–∂–Ω–∞ —á–∏—Ç–∞—Ç–∏'}</div>
                  <div className="ml-8">Number n = numbers.get(0);</div>
                  <div className="ml-8 text-red-600">{'// –ù–ï –º–æ–∂–Ω–∞ –ø–∏—Å–∞—Ç–∏'}</div>
                  <div className="ml-8 text-red-600">{'// numbers.add(1); ‚úó'}</div>
                  <div className="ml-4">&#125;</div>
                </div>
              </div>
              <div className="bg-white p-3 rounded">
                <div className="text-purple-600 font-semibold mb-2">Consumer - –ø–∏—à–µ–º–æ –¥–∞–Ω—ñ</div>
                <div className="font-mono text-xs">
                  <div>public void add(</div>
                  <div className="ml-4">List&lt;? super Integer&gt; numbers) &#123;</div>
                  <div className="ml-8 text-green-600">{'// –ú–æ–∂–Ω–∞ –ø–∏—Å–∞—Ç–∏'}</div>
                  <div className="ml-8">numbers.add(1);</div>
                  <div className="ml-8 text-red-600">{'// –ß–∏—Ç–∞–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ —è–∫ Object'}</div>
                  <div className="ml-8">Object o = numbers.get(0);</div>
                  <div className="ml-4">&#125;</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-green-50 p-5 rounded-lg">
            <h4 className="font-bold text-green-700 mb-3">–ü—Ä–∏–∫–ª–∞–¥ –∑ Collections.copy()</h4>
            <div className="bg-white p-4 rounded font-mono text-xs">
              <div className="text-blue-600">{'// –ü—Ä–∞–≤–∏–ª—å–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è PECS'}</div>
              <div>public static &lt;T&gt; void copy(</div>
              <div className="ml-4">List&lt;? super T&gt; dest, <span className="text-purple-600">{'// Consumer - –∑–∞–ø–∏—Å—É—î–º–æ'}</span></div>
              <div className="ml-4">List&lt;? extends T&gt; src <span className="text-green-600">{'// Producer - —á–∏—Ç–∞—î–º–æ'}</span></div>
              <div>) &#123;</div>
              <div className="ml-4">for (T item : src) &#123; <span className="text-gray-500">{'// –ß–∏—Ç–∞—î–º–æ –∑ src'}</span></div>
              <div className="ml-8">dest.add(item); <span className="text-gray-500">{'// –ü–∏—à–µ–º–æ –≤ dest'}</span></div>
              <div className="ml-4">&#125;</div>
              <div>&#125;</div>
              <div className="mt-3 text-blue-600">{'// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'}</div>
              <div>List&lt;Integer&gt; src = Arrays.asList(1, 2, 3);</div>
              <div>List&lt;Number&gt; dest = new ArrayList&lt;&gt;();</div>
              <div>copy(dest, src); <span className="text-green-600">{'// –ü—Ä–∞—Ü—é—î!'}</span></div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –Ø–∫ –∑–∞–ø–∞–º'—è—Ç–∞—Ç–∏ PECS:</p>
            <div className="space-y-1 text-sm text-gray-700">
              <div>üì§ –Ø–∫—â–æ –º–µ—Ç–æ–¥ <strong>–≤—ñ–¥–¥–∞—î</strong> –¥–∞–Ω—ñ –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó ‚Üí extends (Producer)</div>
              <div>üì• –Ø–∫—â–æ –º–µ—Ç–æ–¥ <strong>–ø—Ä–∏–π–º–∞—î</strong> –¥–∞–Ω—ñ –≤ –∫–æ–ª–µ–∫—Ü—ñ—é ‚Üí super (Consumer)</div>
              <div>üîÑ –Ø–∫—â–æ —ñ —á–∏—Ç–∞—î, —ñ –ø–∏—à–µ ‚Üí –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ wildcards</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–ï—Ñ–µ–∫—Ç–∏–≤–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Functional Interface",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-green-500 to-blue-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">Best Practices –¥–ª—è Lambda —Ç–∞ FI</h3>
          </div>

          <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
            <h4 className="font-bold text-green-700 mb-3 flex items-center gap-2">
              <CheckCircle size={20} />
              –ü—Ä–∞–∫—Ç–∏–∫–∞ #1: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ method references
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-orange-600 font-semibold mb-2">‚ö†Ô∏è –ú–æ–∂–Ω–∞ –∫—Ä–∞—â–µ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>list.forEach(item -&gt; </div>
                  <div className="ml-4">System.out.println(item));</div>
                  <div className="mt-2">list.sort((a, b) -&gt; </div>
                  <div className="ml-4">a.compareTo(b));</div>
                  <div className="mt-2">list.replaceAll(s -&gt; </div>
                  <div className="ml-4">s.toUpperCase());</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –ö—Ä–∞—â–µ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>list.forEach(</div>
                  <div className="ml-4">System.out::println);</div>
                  <div className="mt-2">list.sort(</div>
                  <div className="ml-4">String::compareTo);</div>
                  <div className="mt-2">list.replaceAll(</div>
                  <div className="ml-4">String::toUpperCase);</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
            <h4 className="font-bold text-blue-700 mb-3 flex items-center gap-2">
              <CheckCircle size={20} />
              –ü—Ä–∞–∫—Ç–∏–∫–∞ #2: –¢—Ä–∏–º–∞–π—Ç–µ lambda –∫–æ—Ä–æ—Ç–∫–∏–º–∏
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ü–æ–≥–∞–Ω–æ - –¥–æ–≤–≥–∞ lambda:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>users.forEach(user -&gt; &#123;</div>
                  <div className="ml-4">String name = user.getName();</div>
                  <div className="ml-4">String email = user.getEmail();</div>
                  <div className="ml-4">if (email != null) &#123;</div>
                  <div className="ml-8">String normalized = email</div>
                  <div className="ml-12">.trim().toLowerCase();</div>
                  <div className="ml-8">sendEmail(normalized, name);</div>
                  <div className="ml-4">&#125;</div>
                  <div className="ml-4 text-red-600">{'// –ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –ª–æ–≥—ñ–∫–∏!'}</div>
                  <div>&#125;);</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –î–æ–±—Ä–µ - –≤–∏–Ω–µ—Å—Ç–∏ –≤ –º–µ—Ç–æ–¥:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>users.forEach(this::processUser);</div>
                  <div className="mt-3">private void processUser(User user) &#123;</div>
                  <div className="ml-4">String name = user.getName();</div>
                  <div className="ml-4">String email = user.getEmail();</div>
                  <div className="ml-4">if (email != null) &#123;</div>
                  <div className="ml-8">String normalized = email</div>
                  <div className="ml-12">.trim().toLowerCase();</div>
                  <div className="ml-8">sendEmail(normalized, name);</div>
                  <div className="ml-4">&#125;</div>
                  <div>&#125;</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
            <h4 className="font-bold text-purple-700 mb-3 flex items-center gap-2">
              <CheckCircle size={20} />
              –ü—Ä–∞–∫—Ç–∏–∫–∞ #3: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ FI
            </h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ù–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏–π –≤–ª–∞—Å–Ω–∏–π FI:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div>@FunctionalInterface</div>
                  <div>interface StringProcessor &#123;</div>
                  <div className="ml-4">String process(String s);</div>
                  <div>&#125;</div>
                  <div className="mt-2 text-red-600">{'// –¶–µ –∂ Function&lt;String,String&gt;!'}</div>
                  <div className="mt-2">@FunctionalInterface</div>
                  <div>interface Checker &#123;</div>
                  <div className="ml-4">boolean check(String s);</div>
                  <div>&#125;</div>
                  <div className="text-red-600">{'// –¶–µ –∂ Predicate&lt;String&gt;!'}</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-green-600">{'// –ó–∞–º—ñ—Å—Ç—å StringProcessor'}</div>
                  <div>Function&lt;String, String&gt; processor = </div>
                  <div className="ml-4">String::toUpperCase;</div>
                  <div className="mt-3 text-green-600">{'// –ó–∞–º—ñ—Å—Ç—å Checker'}</div>
                  <div>Predicate&lt;String&gt; checker = </div>
                  <div className="ml-4">String::isEmpty;</div>
                  <div className="mt-3 text-blue-600">{'// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ FI:'}</div>
                  <div>Consumer, Supplier, Function,</div>
                  <div>Predicate, UnaryOperator,</div>
                  <div>BinaryOperator</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-orange-50 p-5 rounded-lg">
            <h4 className="font-bold text-orange-700 mb-3 flex items-center gap-2">
              <AlertTriangle size={20} />
              –ü—Ä–∞–∫—Ç–∏–∫–∞ #4: –û–±–µ—Ä–µ–∂–Ω–æ –∑ checked exceptions
            </h4>
            <div className="bg-white p-4 rounded font-mono text-xs">
              <div className="text-red-600">{'// Lambda –Ω–µ –º–æ–∂–µ –≤–∏–∫–∏–¥–∞—Ç–∏ checked exceptions'}</div>
              <div>list.forEach(item -&gt; &#123;</div>
              <div className="ml-4 text-red-600">{'// processItem(item); // –ü–æ–º–∏–ª–∫–∞ —è–∫—â–æ throws IOException'}</div>
              <div>&#125;);</div>
              <div className="mt-3 text-green-600">{'// –†—ñ—à–µ–Ω–Ω—è 1: –û–±–µ—Ä–Ω—É—Ç–∏ –≤ unchecked'}</div>
              <div>list.forEach(item -&gt; &#123;</div>
              <div className="ml-4">try &#123;</div>
              <div className="ml-8">processItem(item);</div>
              <div className="ml-4">&#125; catch (IOException e) &#123;</div>
              <div className="ml-8">throw new RuntimeException(e);</div>
              <div className="ml-4">&#125;</div>
              <div>&#125;);</div>
              <div className="mt-3 text-green-600">{'// –†—ñ—à–µ–Ω–Ω—è 2: –°—Ç–≤–æ—Ä–∏—Ç–∏ wrapper –º–µ—Ç–æ–¥'}</div>
              <div>list.forEach(this::processItemSafely);</div>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
            <p className="font-semibold text-gray-800 mb-2">üí° –ó–æ–ª–æ—Ç—ñ –ø—Ä–∞–≤–∏–ª–∞:</p>
            <ul className="space-y-1 text-sm text-gray-700">
              <li>‚úì Method references –∫—Ä–∞—â–µ –∑–∞ lambda</li>
              <li>‚úì Lambda –º–∞—é—Ç—å –±—É—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–º–∏ (1-3 —Ä—è–¥–∫–∏)</li>
              <li>‚úì –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ FI –∑ java.util.function</li>
              <li>‚úì –ù–µ —Ä–æ–±—ñ—Ç—å —Å–∫–ª–∞–¥–Ω—É –ª–æ–≥—ñ–∫—É –≤ lambda</li>
              <li>‚úì –û–±–µ—Ä–µ–∂–Ω–æ –∑ side effects</li>
            </ul>
          </div>
        </div>
      )
    },
    {
      title: "Performance: –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–æ–ª–µ–∫—Ü—ñ–π",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white p-4 rounded-lg">
            <h3 className="text-2xl font-bold">–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</h3>
          </div>

          <div className="bg-yellow-50 p-5 rounded-lg border-l-4 border-yellow-500">
            <h4 className="font-bold text-yellow-700 mb-3">–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó —î–º–Ω–æ—Å—Ç—ñ</h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ù–µ–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-red-600">{'// –ë–∞–≥–∞—Ç–æ reallocation'}</div>
                  <div>List&lt;String&gt; list = new ArrayList&lt;&gt;();</div>
                  <div>for (int i = 0; i &lt; 10000; i++) &#123;</div>
                  <div className="ml-4">list.add("item" + i);</div>
                  <div>&#125;</div>
                  <div className="mt-2 text-red-600">{'// HashMap –±—É–¥–µ resize –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤'}</div>
                  <div>Map&lt;K,V&gt; map = new HashMap&lt;&gt;();</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-green-600">{'// –û–¥—Ä–∞–∑—É –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–º—ñ—Ä'}</div>
                  <div>List&lt;String&gt; list = </div>
                  <div className="ml-4">new ArrayList&lt;&gt;(10000);</div>
                  <div>for (int i = 0; i &lt; 10000; i++) &#123;</div>
                  <div className="ml-4">list.add("item" + i);</div>
                  <div>&#125;</div>
                  <div className="mt-2 text-green-600">{'// –ü–æ—á–∞—Ç–∫–æ–≤–∞ —î–º–Ω—ñ—Å—Ç—å –¥–ª—è Map'}</div>
                  <div>Map&lt;K,V&gt; map = new HashMap&lt;&gt;(1000);</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
            <h4 className="font-bold text-orange-700 mb-3">–í–∏–±—ñ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –∫–æ–ª–µ–∫—Ü—ñ—ó</h4>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <div className="text-red-600 font-semibold mb-2">‚ùå –ü–æ–≤—ñ–ª—å–Ω–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-red-600">{'// contains() –Ω–∞ List - O(n)'}</div>
                  <div>List&lt;String&gt; visited = new ArrayList&lt;&gt;();</div>
                  <div>for (String item : items) &#123;</div>
                  <div className="ml-4">if (!visited.contains(item)) &#123;</div>
                  <div className="ml-8 text-red-600">{'// O(n) –∫–æ–∂–µ–Ω —Ä–∞–∑!'}</div>
                  <div className="ml-8">visited.add(item);</div>
                  <div className="ml-4">&#125;</div>
                  <div>&#125;</div>
                </div>
              </div>
              <div>
                <div className="text-green-600 font-semibold mb-2">‚úÖ –®–≤–∏–¥–∫–æ:</div>
                <div className="bg-white p-3 rounded font-mono text-xs">
                  <div className="text-green-600">{'// contains() –Ω–∞ Set - O(1)'}</div>
                  <div>Set&lt;String&gt; visited = new HashSet&lt;&gt;();</div>
                  <div>for (String item : items) &#123;</div>
                  <div className="ml-4">if (!visited.contains(item)) &#123;</div>
                  <div className="ml-8 text-green-600">{'// O(1) - —à–≤–∏–¥–∫–æ!'}</div>
                  <div className="ml-8">visited.add(item);</div>
                  <div className="ml-4">&#125;</div>
                  <div>&#125;</div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-blue-50 p-5 rounded-lg">
            <h4 className="font-bold text-blue-700 mb-3">–¢–∞–±–ª–∏—Ü—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ</h4>
            <div className="overflow-x-auto">
              <table className="w-full bg-white rounded text-xs">
                <thead>
                  <tr className="bg-blue-200">
                    <th className="p-2 text-left">–û–ø–µ—Ä–∞—Ü—ñ—è</th>
                    <th className="p-2">ArrayList</th>
                    <th className="p-2">LinkedList</th>
                    <th className="p-2">HashSet</th>
                    <th className="p-2">TreeSet</th>
                  </tr>
                </thead>
                <tbody>
                  <tr className="border-b">
                    <td className="p-2">add –≤ –∫—ñ–Ω–µ—Ü—å</td>
                    <td className="p-2 text-center bg-green-50">O(1)*</td>
                    <td className="p-2 text-center bg-green-50">O(1)</td>
                    <td className="p-2 text-center bg-green-50">O(1)</td>
                    <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                  </tr>
                  <tr className="border-b">
                    <td className="p-2">get(index)</td>
                    <td className="p-2 text-center bg-green-50">O(1)</td>
                    <td className="p-2 text-center bg-red-50">O(n)</td>
                    <td className="p-2 text-center">N/A</td>
                    <td className="p-2 text-center">N/A</td>
                  </tr>
                  <tr className="border-b">
                    <td className="p-2">contains</td>
                    <td className="p-2 text-center bg-red-50">O(n)</td>
                    <td className="p-2 text-center bg-red-50">O(n)</td>
                    <td className="p-2 text-center bg-green-50">O(1)</td>
                    <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                  </tr>
                  <tr>
                    <td className="p-2">remove(index)</td>
                    <td className="p-2 text-center bg-red-50">O(n)</td>
                    <td className="p-2 text-center bg-red-50">O(n)</td>
                    <td className="p-2 text-center bg-green-50">O(1)</td>
                    <td className="p-2 text-center bg-yellow-50">O(log n)</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          <div className="bg-purple-50 p-5 rounded-lg">
            <h4 className="font-bold text-purple-700 mb-3">–ö–æ–ª–∏ –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏?</h4>
            <div className="space-y-2 text-sm text-gray-700">
              <div>üî∏ <strong>–í–µ–ª–∏–∫—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó:</strong> &gt; 10,000 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤</div>
              <div>üî∏ <strong>–ß–∞—Å—Ç—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó:</strong> –≤ —Ü–∏–∫–ª–∞—Ö –∞–±–æ hot path</div>
              <div>üî∏ <strong>Performance-critical –∫–æ–¥:</strong> API endpoints, –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö</div>
              <div>üî∏ <strong>–ù–ï –æ–ø—Ç–∏–º—ñ–∑—É–π—Ç–µ –ø–µ—Ä–µ–¥—á–∞—Å–Ω–æ:</strong> —Å–ø–æ—á–∞—Ç–∫—É –≤–∏–º—ñ—Ä—è–π—Ç–µ!</div>
            </div>
          </div>

          <div className="bg-green-50 p-4 rounded-lg">
            <p className="font-semibold text-gray-800 mb-2">üí° –®–≤–∏–¥–∫–∞ –¥–æ–≤—ñ–¥–∫–∞:</p>
            <div className="grid grid-cols-2 gap-2 text-xs">
              <div>‚úì –®–≤–∏–¥–∫–∏–π –ø–æ—à—É–∫ ‚Üí <strong>HashSet/HashMap</strong></div>
              <div>‚úì –®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º ‚Üí <strong>ArrayList</strong></div>
              <div>‚úì –ß–∞—Å—Ç–æ contains() ‚Üí <strong>Set –∑–∞–º—ñ—Å—Ç—å List</strong></div>
              <div>‚úì –í–µ–ª–∏–∫–∞ –∫–æ–ª–µ–∫—Ü—ñ—è ‚Üí –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä</div>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–ü—ñ–¥—Å—É–º–æ–∫: Best Practices",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-emerald-500 to-teal-500 text-white p-6 rounded-lg">
            <h3 className="text-3xl font-bold mb-4">–ì–æ–ª–æ–≤–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞</h3>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-bold text-blue-700 mb-3">Collections</h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚úì ArrayList - –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è List</li>
                <li>‚úì HashMap/HashSet - –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º</li>
                <li>‚úì TreeMap/TreeSet - —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</li>
                <li>‚úì –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π</li>
                <li>‚úì Set –¥–ª—è –ø–æ—à—É–∫—É, List –¥–ª—è –¥–æ—Å—Ç—É–ø—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º</li>
              </ul>
            </div>

            <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-bold text-purple-700 mb-3">Generics</h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚úì –ó–∞–≤–∂–¥–∏ –≤–∫–∞–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∏–ø—É</li>
                <li>‚úì –ù—ñ–∫–æ–ª–∏ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ raw types</li>
                <li>‚úì PECS: Producer Extends, Consumer Super</li>
                <li>‚úì Diamond operator &lt;&gt;</li>
                <li>‚úì –†–æ–∑—É–º—ñ–π—Ç–µ Type Erasure</li>
              </ul>
            </div>

            <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
              <h4 className="font-bold text-green-700 mb-3">Functional Interface</h4>
              <ul className="space-y-2 text-sm text-gray-700">
                <li>‚úì Method references &gt; lambda</li>
                <li>‚úì –ö–æ—Ä–æ—Ç–∫—ñ lambda (1-3 —Ä—è–¥–∫–∏)</li>
                <li>‚úì –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ FI –∑ java.util.function</li>
                <li>‚úì –í–∏–Ω–æ—Å–∏—Ç–∏ —Å–∫–ª–∞–¥–Ω—É –ª–æ–≥—ñ–∫—É –≤ –º–µ—Ç–æ–¥–∏</li>
                <li>‚úì –û–±–µ—Ä–µ–∂–Ω–æ –∑ side effects</li>
              </ul>
            </div>
          </div>

          <div className="bg-red-50 p-5 rounded-lg border-l-4 border-red-500">
            <h4 className="font-bold text-red-700 mb-3 flex items-center gap-2">
              <XCircle size={20} />
              –¢–û–ü-5 –ø–æ–º–∏–ª–æ–∫, —è–∫–∏—Ö —Å–ª—ñ–¥ —É–Ω–∏–∫–∞—Ç–∏
            </h4>
            <ol className="space-y-2 text-sm text-gray-700 list-decimal list-inside">
              <li><strong>Raw types</strong> - –∑–∞–≤–∂–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Generics</li>
              <li><strong>LinkedList –∑–∞–º—ñ—Å—Ç—å ArrayList</strong> - –º–∞–π–∂–µ –∑–∞–≤–∂–¥–∏ ArrayList –∫—Ä–∞—â–µ</li>
              <li><strong>List –¥–ª—è –ø–æ—à—É–∫—É</strong> - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Set –¥–ª—è contains()</li>
              <li><strong>–Ü–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è compiler warnings</strong> - –≤–æ–Ω–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–∞—é—Ç—å –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏</li>
              <li><strong>–î–æ–≤–≥—ñ lambda</strong> - –≤–∏–Ω–æ—Å—å—Ç–µ –ª–æ–≥—ñ–∫—É –≤ –æ–∫—Ä–µ–º—ñ –º–µ—Ç–æ–¥–∏</li>
            </ol>
          </div>

          <div className="bg-yellow-50 p-5 rounded-lg border border-yellow-400">
            <h4 className="font-bold text-yellow-700 mb-3">–ß–µ–∫-–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ commit</h4>
            <div className="grid grid-cols-2 gap-2 text-sm">
              <div>‚òëÔ∏è –í—Å—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó –∑ Generics?</div>
              <div>‚òëÔ∏è –ù–µ–º–∞—î raw types?</div>
              <div>‚òëÔ∏è ArrayList –∑–∞–º—ñ—Å—Ç—å LinkedList?</div>
              <div>‚òëÔ∏è Set –∑–∞–º—ñ—Å—Ç—å List –¥–ª—è –ø–æ—à—É–∫—É?</div>
              <div>‚òëÔ∏è Lambda –∫–æ—Ä–æ—Ç–∫—ñ —ñ –∑—Ä–æ–∑—É–º—ñ–ª—ñ?</div>
              <div>‚òëÔ∏è Method references –¥–µ –º–æ–∂–ª–∏–≤–æ?</div>
              <div>‚òëÔ∏è –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π?</div>
              <div>‚òëÔ∏è –ù–µ–º–∞—î compiler warnings?</div>
            </div>
          </div>

          <div className="text-center bg-gradient-to-r from-emerald-100 to-teal-100 p-6 rounded-lg">
            <p className="text-xl font-bold text-gray-800 mb-2">
              –î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—å —Ü–∏—Ö –ø—Ä–∞–≤–∏–ª —ñ –≤–∞—à –∫–æ–¥ –±—É–¥–µ:
            </p>
            <div className="flex justify-center gap-6 mt-4 text-lg font-semibold">
              <div className="text-blue-600">‚úì –®–≤–∏–¥–∫–∏–º</div>
              <div className="text-green-600">‚úì –ë–µ–∑–ø–µ—á–Ω–∏–º</div>
              <div className="text-purple-600">‚úì –ß–∏—Ç–∞–±–µ–ª—å–Ω–∏–º</div>
              <div className="text-orange-600">‚úì –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–º</div>
            </div>
          </div>
        </div>
      )
    }
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-50 via-teal-50 to-cyan-50 p-8">
      <div className="max-w-6xl mx-auto">
        <div className="bg-white rounded-2xl shadow-2xl p-12 min-h-[700px] flex flex-col">
          <div className="mb-8">
            <h1 className="text-4xl font-bold text-gray-800 mb-2">{slides[currentSlide].title}</h1>
            {slides[currentSlide].subtitle && (
              <p className="text-lg text-gray-600">{slides[currentSlide].subtitle}</p>
            )}
            <div className="h-1 w-32 bg-gradient-to-r from-emerald-500 via-teal-500 to-cyan-500 rounded mt-3"></div>
          </div>

          <div className="flex-grow overflow-y-auto">
            {slides[currentSlide].content}
          </div>

          <div className="flex justify-between items-center mt-8 pt-6 border-t">
            <button
              onClick={prevSlide}
              disabled={currentSlide === 0}
              className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-500 text-white rounded-lg hover:from-emerald-600 hover:to-teal-600 disabled:from-gray-300 disabled:to-gray-300 disabled:cursor-not-allowed transition-all shadow-lg hover:shadow-xl"
            >
              <ChevronLeft size={20} />
              –ù–∞–∑–∞–¥
            </button>

            <div className="flex gap-2">
              {slides.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentSlide(index)}
                  className={`h-3 rounded-full transition-all ${
                    index === currentSlide
                      ? 'bg-gradient-to-r from-emerald-500 to-teal-500 w-8'
                      : 'bg-gray-300 hover:bg-gray-400 w-3'
                  }`}
                  title={`–°–ª–∞–π–¥ ${index + 1}`}
                />
              ))}
            </div>

            <button
              onClick={nextSlide}
              disabled={currentSlide === slides.length - 1}
              className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-500 text-white rounded-lg hover:from-emerald-600 hover:to-teal-600 disabled:from-gray-300 disabled:to-gray-300 disabled:cursor-not-allowed transition-all shadow-lg hover:shadow-xl"
            >
              –í–ø–µ—Ä–µ–¥
              <ChevronRight size={20} />
            </button>
          </div>

          <div className="text-center mt-4 text-sm text-gray-500">
            –°–ª–∞–π–¥ {currentSlide + 1} –∑ {slides.length}
          </div>
        </div>
      </div>
    </div>
  );
};

export default BestPracticesPresentation;