import React, { useState } from 'react';
import { ChevronRight, ChevronLeft } from 'lucide-react';

const Presentation = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const slides = [
    {
      title: "Java: Generics, Collections, Functional Interface",
      content: (
        <div className="space-y-8">
          <div className="text-center">
            <h2 className="text-4xl font-bold text-blue-600 mb-4">–û—Å–Ω–æ–≤–∏ —Å—É—á–∞—Å–Ω–æ—ó Java</h2>
            <p className="text-xl text-gray-600">–¢—Ä–∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó –¥–ª—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è</p>
          </div>
        </div>
      )
    },
    {
      title: "–û–≥–ª—è–¥ —Ç–µ–º",
      content: (
        <div className="space-y-6">
          <div className="bg-blue-50 p-6 rounded-lg border-l-4 border-blue-500">
            <h3 className="text-2xl font-bold text-blue-700 mb-3">üî∑ Generics (–£–∑–∞–≥–∞–ª—å–Ω–µ–Ω–Ω—è)</h3>
            <p className="text-gray-700">–¢–∏–ø–æ–±–µ–∑–ø–µ—á–Ω–∏–π –∫–æ–¥ –±–µ–∑ —è–≤–Ω–∏—Ö –ø—Ä–∏–≤–µ–¥–µ–Ω—å —Ç–∏–ø—ñ–≤</p>
          </div>
          
          <div className="bg-green-50 p-6 rounded-lg border-l-4 border-green-500">
            <h3 className="text-2xl font-bold text-green-700 mb-3">üì¶ Collections Framework</h3>
            <p className="text-gray-700">–ü–æ—Ç—É–∂–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –æ–±'—î–∫—Ç—ñ–≤</p>
          </div>
          
          <div className="bg-purple-50 p-6 rounded-lg border-l-4 border-purple-500">
            <h3 className="text-2xl font-bold text-purple-700 mb-3">‚ö° Functional Interface</h3>
            <p className="text-gray-700">–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ —Ç–∞ lambda-–≤–∏—Ä–∞–∑–∏</p>
          </div>
        </div>
      )
    },
    {
      title: "–í–∑–∞—î–º–æ–∑–≤'—è–∑–æ–∫ –∫–æ–Ω—Ü–µ–ø—Ü—ñ–π",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-blue-50 to-green-50 p-6 rounded-lg">
            <div className="flex items-center gap-4 mb-4">
              <span className="text-3xl">üî∑</span>
              <ChevronRight className="text-gray-400" />
              <span className="text-3xl">üì¶</span>
            </div>
            <p className="text-gray-700 font-semibold">Generics ‚Üí Collections</p>
            <p className="text-gray-600">Collections –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å Generics –¥–ª—è —Ç–∏–ø–æ–±–µ–∑–ø–µ–∫–∏</p>
            <code className="block mt-2 bg-white p-2 rounded text-sm">
              List&lt;String&gt; list = new ArrayList&lt;&gt;();
            </code>
          </div>

          <div className="bg-gradient-to-r from-green-50 to-purple-50 p-6 rounded-lg">
            <div className="flex items-center gap-4 mb-4">
              <span className="text-3xl">üì¶</span>
              <ChevronRight className="text-gray-400" />
              <span className="text-3xl">‚ö°</span>
            </div>
            <p className="text-gray-700 font-semibold">Collections ‚Üí Functional Interface</p>
            <p className="text-gray-600">–ú–µ—Ç–æ–¥–∏ –∫–æ–ª–µ–∫—Ü—ñ–π –ø—Ä–∏–π–º–∞—é—Ç—å —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏</p>
            <code className="block mt-2 bg-white p-2 rounded text-sm">
              list.forEach(item -&gt; System.out.println(item));
            </code>
          </div>

          <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-6 rounded-lg">
            <div className="flex items-center gap-4 mb-4">
              <span className="text-3xl">üî∑</span>
              <ChevronRight className="text-gray-400" />
              <span className="text-3xl">‚ö°</span>
            </div>
            <p className="text-gray-700 font-semibold">Generics ‚Üí Functional Interface</p>
            <p className="text-gray-600">–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω—ñ —á–µ—Ä–µ–∑ Generics</p>
            <code className="block mt-2 bg-white p-2 rounded text-sm">
              Function&lt;String, Integer&gt; converter = String::length;
            </code>
          </div>
        </div>
      )
    },
    {
      title: "–ß–æ–º—É —Ü—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó –≤–∞–∂–ª–∏–≤—ñ?",
      content: (
        <div className="space-y-5">
          <div className="bg-red-50 p-5 rounded-lg border-l-4 border-red-400">
            <h4 className="font-bold text-red-700 mb-2">üõ°Ô∏è –ë–µ–∑–ø–µ–∫–∞ —Ç–∏–ø—ñ–≤ (Type Safety)</h4>
            <p className="text-gray-700">–ü–æ–º–∏–ª–∫–∏ –≤–∏—è–≤–ª—è—é—Ç—å—Å—è –Ω–∞ –µ—Ç–∞–ø—ñ –∫–æ–º–ø—ñ–ª—è—Ü—ñ—ó, –∞ –Ω–µ –≤ runtime</p>
          </div>

          <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-400">
            <h4 className="font-bold text-orange-700 mb-2">üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–¥—É</h4>
            <p className="text-gray-700">–û–¥–∏–Ω generic –∫–ª–∞—Å –ø—Ä–∞—Ü—é—î –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–∏—Ö</p>
          </div>

          <div className="bg-yellow-50 p-5 rounded-lg border-l-4 border-yellow-400">
            <h4 className="font-bold text-yellow-700 mb-2">üìà –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</h4>
            <p className="text-gray-700">–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –∫–æ–ª–µ–∫—Ü—ñ—ó –ø–æ–∫—Ä–∞—â—É—î —à–≤–∏–¥–∫–æ–¥—ñ—é –≤ —Ä–∞–∑–∏</p>
          </div>

          <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-400">
            <h4 className="font-bold text-green-700 mb-2">‚ú® –ß–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å –∫–æ–¥—É</h4>
            <p className="text-gray-700">Lambda-–≤–∏—Ä–∞–∑–∏ —Ä–æ–±–ª—è—Ç—å –∫–æ–¥ –ª–∞–∫–æ–Ω—ñ—á–Ω—ñ—à–∏–º —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª—ñ—à–∏–º</p>
          </div>

          <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-400">
            <h4 className="font-bold text-blue-700 mb-2">üèóÔ∏è –û—Å–Ω–æ–≤–∞ —Å—É—á–∞—Å–Ω–æ—ó Java</h4>
            <p className="text-gray-700">–ù–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Java 8+ —Ç–∞ –≤—Å—ñ–º–∞ —Å—É—á–∞—Å–Ω–∏–º–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞–º–∏</p>
          </div>
        </div>
      )
    },
    {
      title: "–ü—Ä–∞–∫—Ç–∏—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è",
      content: (
        <div className="space-y-6">
          <div className="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-lg">
            <h3 className="text-2xl font-bold mb-4">–ë–µ–∑ —Ü–∏—Ö –∫–æ–Ω—Ü–µ–ø—Ü—ñ–π –Ω–µ–º–æ–∂–ª–∏–≤–æ:</h3>
          </div>

          <div className="grid grid-cols-1 gap-4">
            <div className="bg-white p-4 rounded-lg shadow border-l-4 border-blue-500">
              <p className="font-semibold text-gray-800">‚úì –ü—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ Spring Framework</p>
            </div>
            
            <div className="bg-white p-4 rounded-lg shadow border-l-4 border-green-500">
              <p className="font-semibold text-gray-800">‚úì –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Hibernate —Ç–∞ JPA</p>
            </div>
            
            <div className="bg-white p-4 rounded-lg shadow border-l-4 border-purple-500">
              <p className="font-semibold text-gray-800">‚úì –ï—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±—Ä–æ–±–ª—è—Ç–∏ –¥–∞–Ω—ñ</p>
            </div>
            
            <div className="bg-white p-4 rounded-lg shadow border-l-4 border-orange-500">
              <p className="font-semibold text-gray-800">‚úì –ü–∏—Å–∞—Ç–∏ —Å—É—á–∞—Å–Ω–∏–π —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π –∫–æ–¥</p>
            </div>
            
            <div className="bg-white p-4 rounded-lg shadow border-l-4 border-red-500">
              <p className="font-semibold text-gray-800">‚úì –†–æ–∑—É–º—ñ—Ç–∏ –∫–æ–¥ —ñ–Ω—à–∏—Ö —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤</p>
            </div>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-300 mt-6">
            <p className="text-center text-gray-700 font-semibold">
              üí° –¶—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó - —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–æ—Ä—ñ—è, –∞ —â–æ–¥–µ–Ω–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ä—ñ–π Java-—Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
            </p>
          </div>
        </div>
      )
    }
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-8">
      <div className="max-w-5xl mx-auto">
        <div className="bg-white rounded-2xl shadow-2xl p-12 min-h-[600px] flex flex-col">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-gray-800 mb-2">{slides[currentSlide].title}</h1>
            <div className="h-1 w-24 bg-gradient-to-r from-blue-500 to-purple-500 rounded"></div>
          </div>

          <div className="flex-grow overflow-y-auto">
            {slides[currentSlide].content}
          </div>

          <div className="flex justify-between items-center mt-8 pt-6 border-t">
            <button
              onClick={prevSlide}
              disabled={currentSlide === 0}
              className="flex items-center gap-2 px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors"
            >
              <ChevronLeft size={20} />
              –ù–∞–∑–∞–¥
            </button>

            <div className="flex gap-2">
              {slides.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentSlide(index)}
                  className={`w-3 h-3 rounded-full transition-all ${
                    index === currentSlide
                      ? 'bg-blue-500 w-8'
                      : 'bg-gray-300 hover:bg-gray-400'
                  }`}
                />
              ))}
            </div>

            <button
              onClick={nextSlide}
              disabled={currentSlide === slides.length - 1}
              className="flex items-center gap-2 px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors"
            >
              –í–ø–µ—Ä–µ–¥
              <ChevronRight size={20} />
            </button>
          </div>

          <div className="text-center mt-4 text-sm text-gray-500">
            –°–ª–∞–π–¥ {currentSlide + 1} –∑ {slides.length}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Presentation;