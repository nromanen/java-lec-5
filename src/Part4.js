import React, { useState } from 'react';
import { ChevronRight, ChevronLeft, Code, ArrowRight } from 'lucide-react';

const FunctionalPresentation = () => {
    const [currentSlide, setCurrentSlide] = useState(0);

    const slides = [
        {
            title: "Functional Interface",
            subtitle: "–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –≤ Java",
            content: (
                <div className="space-y-8">
                    <div className="text-center">
                        <div className="text-6xl mb-4">‚ö°</div>
                        <h2 className="text-4xl font-bold text-purple-600 mb-4">Functional Interface</h2>
                        <p className="text-xl text-gray-600">Lambda-–≤–∏—Ä–∞–∑–∏ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥</p>
                    </div>

                    <div className="bg-purple-50 p-6 rounded-lg border-l-4 border-purple-500">
                        <p className="text-lg text-gray-700">
                            <strong>Functional Interface</strong> - —Ü–µ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑ –û–î–ù–ò–ú –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–º –º–µ—Ç–æ–¥–æ–º (SAM - Single Abstract Method).
                            –î–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ lambda-–≤–∏—Ä–∞–∑–∏ —Ç–∞ method references.
                        </p>
                    </div>

                    <div className="grid grid-cols-2 gap-4">
                        <div className="bg-blue-50 p-4 rounded-lg text-center">
                            <Code className="mx-auto mb-2 text-blue-600" size={32} />
                            <p className="font-semibold">Lambda-–≤–∏—Ä–∞–∑–∏</p>
                            <p className="text-sm text-gray-600">–ö–æ–º–ø–∞–∫—Ç–Ω–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å</p>
                        </div>
                        <div className="bg-green-50 p-4 rounded-lg text-center">
                            <ArrowRight className="mx-auto mb-2 text-green-600" size={32} />
                            <p className="font-semibold">Method References</p>
                            <p className="text-sm text-gray-600">–©–µ –∫–æ—Ä–æ—Ç—à–µ</p>
                        </div>
                    </div>
                </div>
            )
        },
        {
            title: "–©–æ —Ç–∞–∫–µ Functional Interface?",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è</h3>
                    </div>

                    <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
                        <h4 className="font-bold text-purple-700 mb-3">–ü—Ä–∞–≤–∏–ª–∞ Functional Interface</h4>
                        <ul className="space-y-2 text-gray-700">
                            <li>‚úì –û–î–ò–ù –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥ (Single Abstract Method)</li>
                            <li>‚úì –ú–æ–∂–µ –º–∞—Ç–∏ default –º–µ—Ç–æ–¥–∏ (–±—É–¥—å-—è–∫–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å)</li>
                            <li>‚úì –ú–æ–∂–µ –º–∞—Ç–∏ static –º–µ—Ç–æ–¥–∏ (–±—É–¥—å-—è–∫–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å)</li>
                            <li>‚úì –ú–æ–∂–µ –º–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –∑ Object (equals, toString, hashCode)</li>
                            <li>‚úì –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∞–Ω–æ—Ç–∞—Ü—ñ—è @FunctionalInterface</li>
                        </ul>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
                            <h4 className="font-bold text-green-700 mb-3">–ü—Ä–∏–∫–ª–∞–¥ –≤–ª–∞—Å–Ω–æ–≥–æ FI</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>@FunctionalInterface</div>
                                <div>public interface Calculator &#123;</div>
                                <div className="ml-4">int calculate(int a, int b);</div>
                                <div>&#125;</div>
                            </div>
                        </div>

                        <div className="bg-red-50 p-5 rounded-lg border-l-4 border-red-500">
                            <h4 className="font-bold text-red-700 mb-3">–ù–ï Functional Interface</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-red-600">{'// –î–≤–∞ –º–µ—Ç–æ–¥–∏ - –ø–æ–º–∏–ª–∫–∞!'}</div>
                                <div>@FunctionalInterface</div>
                                <div>public interface Wrong&#123;</div>
                                <div className="ml-4">int method1();</div>
                                <div className="ml-4">int method2();</div>
                                <div>&#125;</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <p className="font-semibold text-gray-800">
                            üí° @FunctionalInterface - –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∞, –∞–ª–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∞–Ω–æ—Ç–∞—Ü—ñ—è.
                            –í–æ–Ω–∞ –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ª–∏—à–∏—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º.
                        </p>
                    </div>
                </div>
            )
        },
        {
            title: "Lambda-–≤–∏—Ä–∞–∑–∏: –°–∏–Ω—Ç–∞–∫—Å–∏—Å",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-blue-500 to-cyan-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">Lambda: (–ø–∞—Ä–∞–º–µ—Ç—Ä–∏) -&gt; —Ç—ñ–ª–æ</h3>
                    </div>

                    <div className="bg-blue-50 p-5 rounded-lg">
                        <h4 className="font-bold text-blue-700 mb-3">–ë–∞–∑–æ–≤–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å</h4>
                        <div className="bg-white p-4 rounded text-sm space-y-2">
                            <div className="text-blue-600">{'// –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤'}</div>
                            <div className="font-mono">() -&gt; System.out.println("Hello")</div>
                            <div className="mt-3 text-blue-600">{'// –û–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä'}</div>
                            <div className="font-mono">x -&gt; x * x</div>
                            <div className="mt-3 text-blue-600">{'// –ö—ñ–ª—å–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤'}</div>
                            <div className="font-mono">(x, y) -&gt; x + y</div>
                            <div className="mt-3 text-blue-600">{'// –ë–ª–æ–∫ –∫–æ–¥—É'}</div>
                            <div className="font-mono">(x, y) -&gt; return x + y;</div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
                            <h4 className="font-bold text-orange-700 mb-3">–î–æ Lambda (Java 7)</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>List&lt;String&gt; list = ...</div>
                                <div className="mt-2">list.forEach(new Consumer() )</div>
                                <div className="mt-2 text-red-600">{'// 7 —Ä—è–¥–∫—ñ–≤ –∫–æ–¥—É!'}</div>
                            </div>
                        </div>

                        <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
                            <h4 className="font-bold text-green-700 mb-3">–ó Lambda (Java 8+)</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>List&lt;String&gt; list = ...</div>
                                <div className="mt-2">list.forEach(s -&gt; println(s));</div>
                                <div className="mt-2">list.forEach(System.out::println);</div>
                                <div className="mt-2 text-green-600">{'// –í—Å—å–æ–≥–æ 1 —Ä—è–¥–æ–∫!'}</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-purple-50 p-5 rounded-lg">
                        <h4 className="font-bold text-purple-700 mb-3">–ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs space-y-2">
                            <div className="text-blue-600">{'// –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è'}</div>
                            <div>names.sort((a, b) -&gt; a.compareTo(b));</div>
                            <div className="mt-3 text-blue-600">{'// Runnable'}</div>
                            <div>new Thread(() -&gt; println("Hello")).start();</div>
                            <div className="mt-3 text-blue-600">{'// –í–ª–∞—Å–Ω–∏–π FI'}</div>
                            <div>Calculator add = (a, b) -&gt; a + b;</div>
                        </div>
                    </div>
                </div>
            )
        },
        {
            title: "–í–±—É–¥–æ–≤–∞–Ω—ñ Functional Interface",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-indigo-500 to-purple-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">java.util.function</h3>
                        <p className="text-sm mt-1">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏</p>
                    </div>

                    <div className="bg-indigo-50 p-5 rounded-lg border-l-4 border-indigo-500">
                        <h4 className="font-bold text-indigo-700 mb-3">–û—Å–Ω–æ–≤–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</h4>
                        <div className="grid grid-cols-2 gap-3 text-sm">
                            <div className="bg-white p-3 rounded">
                                <strong className="text-indigo-600">Consumer&lt;T&gt;</strong>
                                <div className="text-gray-600">–ü—Ä–∏–π–º–∞—î T, –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-green-600">Supplier&lt;T&gt;</strong>
                                <div className="text-gray-600">–ù–µ –ø—Ä–∏–π–º–∞—î, –ø–æ–≤–µ—Ä—Ç–∞—î T</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-blue-600">Function&lt;T,R&gt;</strong>
                                <div className="text-gray-600">–ü—Ä–∏–π–º–∞—î T, –ø–æ–≤–µ—Ä—Ç–∞—î R</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-purple-600">Predicate&lt;T&gt;</strong>
                                <div className="text-gray-600">–ü—Ä–∏–π–º–∞—î T, –ø–æ–≤–µ—Ä—Ç–∞—î boolean</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-orange-600">UnaryOperator&lt;T&gt;</strong>
                                <div className="text-gray-600">–ü—Ä–∏–π–º–∞—î T, –ø–æ–≤–µ—Ä—Ç–∞—î T</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-red-600">BinaryOperator&lt;T&gt;</strong>
                                <div className="text-gray-600">–ü—Ä–∏–π–º–∞—î 2√óT, –ø–æ–≤–µ—Ä—Ç–∞—î T</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <h4 className="font-bold text-yellow-700 mb-2">–°—Ö–µ–º–∞ –≤–∏–±–æ—Ä—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É</h4>
                        <div className="space-y-2 text-sm text-gray-700">
                            <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–æ –ü–†–ò–ô–ù–Ø–¢–ò –∑–Ω–∞—á–µ–Ω–Ω—è? ‚Üí <strong>Consumer</strong></div>
                            <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–æ –°–¢–í–û–†–ò–¢–ò –∑–Ω–∞—á–µ–Ω–Ω—è? ‚Üí <strong>Supplier</strong></div>
                            <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–æ –ü–ï–†–ï–¢–í–û–†–ò–¢–ò —Ç–∏–ø? ‚Üí <strong>Function</strong></div>
                            <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–æ –ü–ï–†–ï–í–Ü–†–ò–¢–ò —É–º–æ–≤—É? ‚Üí <strong>Predicate</strong></div>
                            <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–æ –û–ü–ï–†–ê–¶–Ü–Ø –Ω–∞–¥ –∑–Ω–∞—á–µ–Ω–Ω—è–º? ‚Üí <strong>UnaryOperator</strong></div>
                            <div>üî∏ –ü–æ—Ç—Ä—ñ–±–Ω–æ –û–ü–ï–†–ê–¶–Ü–Ø –Ω–∞–¥ –¥–≤–æ–º–∞? ‚Üí <strong>BinaryOperator</strong></div>
                        </div>
                    </div>

                    <div className="bg-green-50 p-4 rounded-lg">
                        <h4 className="font-bold text-green-700 mb-2">–í–∞—Ä—ñ–∞–Ω—Ç–∏ –∑ –¥–≤–æ–º–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏</h4>
                        <div className="grid grid-cols-3 gap-2 text-xs">
                            <div className="bg-white p-2 rounded">BiConsumer&lt;T,U&gt;</div>
                            <div className="bg-white p-2 rounded">BiFunction&lt;T,U,R&gt;</div>
                            <div className="bg-white p-2 rounded">BiPredicate&lt;T,U&gt;</div>
                        </div>
                    </div>
                </div>
            )
        },
        {
            title: "Consumer T",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-green-500 to-emerald-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">Consumer T</h3>
                        <p className="text-sm mt-1">–°–ø–æ–∂–∏–≤–∞—î (–ø—Ä–∏–π–º–∞—î) –∑–Ω–∞—á–µ–Ω–Ω—è, –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î</p>
                    </div>

                    <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
                        <h4 className="font-bold text-green-700 mb-3">–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è</h4>
                        <div className="bg-white p-4 rounded font-mono text-sm">
                            <div>@FunctionalInterface</div>
                            <div>public interface Consumer T</div>
                            <div className="ml-4">void accept(T t);</div>
                            <div className="mt-2 ml-4 text-gray-500">{'// –ú–µ—Ç–æ–¥ –¥–ª—è –ª–∞–Ω—Ü—é–∂–∫–∞'}</div>
                            <div className="ml-4">default Consumer andThen(...)</div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-blue-50 p-5 rounded-lg">
                            <h4 className="font-bold text-blue-700 mb-3">–ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// –í–∏–≤–µ–¥–µ–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—å'}</div>
                                <div>Consumer String printer = </div>
                                <div className="ml-4">s -&gt; System.out.println(s);</div>
                                <div>printer.accept("Hello");</div>
                                <div className="mt-3 text-blue-600">{'// Method reference'}</div>
                                <div>Consumer String printer2 = </div>
                                <div className="ml-4">System.out::println;</div>
                                <div className="mt-3 text-blue-600">{'// –ó forEach'}</div>
                                <div>List String list = ...</div>
                                <div>list.forEach(System.out::println);</div>
                            </div>
                        </div>

                        <div className="bg-purple-50 p-5 rounded-lg">
                            <h4 className="font-bold text-purple-700 mb-3">–õ–∞–Ω—Ü—é–∂–æ–∫ Consumer</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è —á–µ—Ä–µ–∑ andThen'}</div>
                                <div>Consumer String c1 = </div>
                                <div className="ml-4">s -&gt; System.out.print(s);</div>
                                <div>Consumer String c2 = </div>
                                <div className="ml-4">s -&gt; System.out.print(" - ");</div>
                                <div>Consumer String c3 = </div>
                                <div className="ml-4">s -&gt; System.out.println(s.length());</div>
                                <div className="mt-2">Consumer String chain = </div>
                                <div className="ml-4">c1.andThen(c2).andThen(c3);</div>
                                <div className="mt-2">chain.accept("Hello");</div>
                                <div className="text-gray-500">{'// –í–∏–≤–µ–¥–µ: Hello - 5'}</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-orange-50 p-5 rounded-lg">
                        <h4 className="font-bold text-orange-700 mb-3">BiConsumer T,U - –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div className="text-blue-600">{'// –ü—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏'}</div>
                            <div>BiConsumer String, Integer printer = </div>
                            <div className="ml-4">(name, age) -&gt; println(name + " is " + age);</div>
                            <div>printer.accept("John", 25);</div>
                            <div className="mt-3 text-blue-600">{'// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ Map'}</div>
                            <div>Map String, Integer map = ...</div>
                            <div>map.forEach((lang, year) -&gt; </div>
                            <div className="ml-4">println(lang + ": " + year));</div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <p className="font-semibold text-gray-800">
                            üí° Consumer –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –¥—ñ—é –Ω–∞–¥ –¥–∞–Ω–∏–º–∏ –±–µ–∑ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                        </p>
                    </div>
                </div>
            )
        },
        {
            title: "Supplier T",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-blue-500 to-cyan-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">Supplier T</h3>
                        <p className="text-sm mt-1">–ü–æ—Å—Ç–∞—á–∞—î (—Å—Ç–≤–æ—Ä—é—î) –∑–Ω–∞—á–µ–Ω–Ω—è, –Ω—ñ—á–æ–≥–æ –Ω–µ –ø—Ä–∏–π–º–∞—î</p>
                    </div>

                    <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
                        <h4 className="font-bold text-blue-700 mb-3">–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è</h4>
                        <div className="bg-white p-4 rounded font-mono text-sm">
                            <div>@FunctionalInterface</div>
                            <div>public interface Supplier T</div>
                            <div className="ml-4">T get();</div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-green-50 p-5 rounded-lg">
                            <h4 className="font-bold text-green-700 mb-3">–ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–Ω–∞—á–µ–Ω—å'}</div>
                                <div>Supplier Double randomSupplier = </div>
                                <div className="ml-4">() -&gt; Math.random();</div>
                                <div>Double value = randomSupplier.get();</div>
                                <div className="mt-3 text-blue-600">{'// –ü–æ—Å—Ç–∞—á–∞–Ω–Ω—è –æ–±\'—î–∫—Ç—ñ–≤'}</div>
                                <div>Supplier String stringSupplier = </div>
                                <div className="ml-4">() -&gt; "Hello World";</div>
                                <div className="mt-3 text-blue-600">{'// Method reference'}</div>
                                <div>Supplier List listSupplier = </div>
                                <div className="ml-4">ArrayList::new;</div>
                            </div>
                        </div>

                        <div className="bg-purple-50 p-5 rounded-lg">
                            <h4 className="font-bold text-purple-700 mb-3">Lazy –æ–±—á–∏—Å–ª–µ–Ω–Ω—è</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// –í—ñ–¥–∫–ª–∞–¥–µ–Ω—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è'}</div>
                                <div>public String expensiveOperation()</div>
                                <div className="ml-4">System.out.println("Expensive!");</div>
                                <div className="ml-4">return "Result";</div>
                                <div className="mt-2 text-blue-600">{'// –ë–µ–∑ Supplier - –∑–∞–≤–∂–¥–∏'}</div>
                                <div>logger.log(expensiveOperation());</div>
                                <div className="mt-2 text-blue-600">{'// –ó Supplier - —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ'}</div>
                                <div>logger.log(() -&gt; expensiveOperation());</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-orange-50 p-5 rounded-lg">
                        <h4 className="font-bold text-orange-700 mb-3">–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div className="text-blue-600">{'// Factory pattern'}</div>
                            <div>class UserFactory</div>
                            <div className="ml-4">public static Supplier User adminSupplier = </div>
                            <div className="ml-8">() -&gt; new User("admin", Role.ADMIN);</div>
                            <div className="mt-2">User admin = UserFactory.adminSupplier.get();</div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <p className="font-semibold text-gray-800">
                            üí° Supplier - –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è/–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–Ω–∞—á–µ–Ω—å –±–µ–∑ –≤—Ö—ñ–¥–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤. –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è factory –º–µ—Ç–æ–¥—ñ–≤.
                        </p>
                    </div>
                </div>
            )
        },
        {
            title: "Function T,R",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">Function T,R</h3>
                        <p className="text-sm mt-1">–ü—Ä–∏–π–º–∞—î T, –ø–æ–≤–µ—Ä—Ç–∞—î R - –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤</p>
                    </div>

                    <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
                        <h4 className="font-bold text-purple-700 mb-3">–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è</h4>
                        <div className="bg-white p-4 rounded font-mono text-sm">
                            <div>@FunctionalInterface</div>
                            <div>public interface Function T, R</div>
                            <div className="ml-4">R apply(T t);</div>
                            <div className="mt-2 ml-4 text-gray-500">{'// –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è —Ñ—É–Ω–∫—Ü—ñ–π'}</div>
                            <div className="ml-4">default Function andThen(...)</div>
                            <div className="ml-4">default Function compose(...)</div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-blue-50 p-5 rounded-lg">
                            <h4 className="font-bold text-blue-700 mb-3">–ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// String -&gt; Integer'}</div>
                                <div>Function String, Integer strLength = </div>
                                <div className="ml-4">s -&gt; s.length();</div>
                                <div>Function String, Integer strLength2 = </div>
                                <div className="ml-4">String::length;</div>
                                <div>Integer len = strLength.apply("Hello");</div>
                                <div className="text-gray-500">{'// 5'}</div>
                                <div className="mt-3 text-blue-600">{'// Integer -&gt; String'}</div>
                                <div>Function Integer, String intToStr = </div>
                                <div className="ml-4">i -&gt; "Number: " + i;</div>
                            </div>
                        </div>

                        <div className="bg-green-50 p-5 rounded-lg">
                            <h4 className="font-bold text-green-700 mb-3">–ö–æ–º–ø–æ–∑–∏—Ü—ñ—è —Ñ—É–Ω–∫—Ü—ñ–π</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// andThen: f.andThen(g) = g(f(x))'}</div>
                                <div>Function Integer, Integer multiplyBy2 = </div>
                                <div className="ml-4">x -&gt; x * 2;</div>
                                <div>Function Integer, Integer add3 = </div>
                                <div className="ml-4">x -&gt; x + 3;</div>
                                <div className="mt-2">Function Integer, Integer combined = </div>
                                <div className="ml-4">multiplyBy2.andThen(add3);</div>
                                <div>combined.apply(5);</div>
                                <div className="text-gray-500">{'// (5*2)+3 = 13'}</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-orange-50 p-5 rounded-lg">
                        <h4 className="font-bold text-orange-700 mb-3">BiFunction T,U,R - –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div className="text-blue-600">{'// –ü—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç'}</div>
                            <div>BiFunction Integer, Integer, Integer add = </div>
                            <div className="ml-4">(a, b) -&gt; a + b;</div>
                            <div>Integer sum = add.apply(5, 3);</div>
                            <div className="text-gray-500">{'// 8'}</div>
                        </div>
                    </div>

                    <div className="bg-indigo-50 p-5 rounded-lg">
                        <h4 className="font-bold text-indigo-700 mb-3">UnaryOperator T —Ç–∞ BinaryOperator T</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div className="text-blue-600">{'// UnaryOperator: T -&gt; T'}</div>
                            <div>UnaryOperator Integer square = x -&gt; x * x;</div>
                            <div>Integer result = square.apply(5);</div>
                            <div className="text-gray-500">{'// 25'}</div>
                            <div className="mt-3 text-blue-600">{'// BinaryOperator: (T,T) -&gt; T'}</div>
                            <div>BinaryOperator Integer max = </div>
                            <div className="ml-4">(a, b) -&gt; a &gt; b ? a : b;</div>
                            <div>Integer maxVal = max.apply(10, 20);</div>
                            <div className="text-gray-500">{'// 20'}</div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <p className="font-semibold text-gray-800">
                            üí° Function - –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö. UnaryOperator/BinaryOperator - –∫–æ–ª–∏ –≤—Ö—ñ–¥ —ñ –≤–∏—Ö—ñ–¥ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø—É.
                        </p>
                    </div>
                </div>
            )
        },
        {
            title: "Predicate T",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-orange-500 to-red-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">Predicate T</h3>
                        <p className="text-sm mt-1">–ü—Ä–∏–π–º–∞—î T, –ø–æ–≤–µ—Ä—Ç–∞—î boolean - —É–º–æ–≤–∏ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è</p>
                    </div>

                    <div className="bg-orange-50 p-5 rounded-lg border-l-4 border-orange-500">
                        <h4 className="font-bold text-orange-700 mb-3">–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è</h4>
                        <div className="bg-white p-4 rounded font-mono text-sm">
                            <div>@FunctionalInterface</div>
                            <div>public interface Predicate T</div>
                            <div className="ml-4">boolean test(T t);</div>
                            <div className="mt-2 ml-4 text-gray-500">{'// –õ–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó'}</div>
                            <div className="ml-4">default Predicate and(...)</div>
                            <div className="ml-4">default Predicate or(...)</div>
                            <div className="ml-4">default Predicate negate()</div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-blue-50 p-5 rounded-lg">
                            <h4 className="font-bold text-blue-700 mb-3">–ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–º–æ–≤'}</div>
                                <div>Predicate&lt;Integer&gt; isPositive = </div>
                                <div className="ml-4">x -&gt; x &gt; 0;</div>
                                <div>isPositive.test(5);</div>
                                <div className="text-gray-500">{'// true'}</div>
                                <div>isPositive.test(-3);</div>
                                <div className="text-gray-500">{'// false'}</div>
                                <div className="mt-3">Predicate String isEmpty = </div>
                                <div className="ml-4">String::isEmpty;</div>
                                <div className="mt-3 text-blue-600">{'// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫–æ–ª–µ–∫—Ü—ñ–π'}</div>
                                <div>List Integer numbers = ...</div>
                                <div>numbers.removeIf(x -&gt; x &lt; 0);</div>
                                <div className="text-gray-500">{'// –í–∏–¥–∞–ª–∏—Ç—å –Ω–µ–≥–∞—Ç–∏–≤–Ω—ñ'}</div>
                            </div>
                        </div>

                        <div className="bg-green-50 p-5 rounded-lg">
                            <h4 className="font-bold text-green-700 mb-3">–õ–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-blue-600">{'// AND - –æ–±–∏–¥–≤—ñ —É–º–æ–≤–∏'}</div>
                                <div>Predicate Integer isPositive = </div>
                                <div className="ml-4">x -&gt; x &gt; 0;</div>
                                <div>Predicate Integer isEven = </div>
                                <div className="ml-4">x -&gt; x % 2 == 0;</div>
                                <div className="mt-2">Predicate Integer positiveEven = </div>
                                <div className="ml-4">isPositive.and(isEven);</div>
                                <div>positiveEven.test(4);</div>
                                <div className="text-gray-500">{'// true'}</div>
                                <div className="mt-3 text-blue-600">{'// OR - –±—É–¥—å-—è–∫–∞'}</div>
                                <div>Predicate Integer positiveOrEven = </div>
                                <div className="ml-4">isPositive.or(isEven);</div>
                                <div className="mt-3 text-blue-600">{'// NEGATE - —ñ–Ω–≤–µ—Ä—Å—ñ—è'}</div>
                                <div>Predicate Integer isNegative = </div>
                                <div className="ml-4">isPositive.negate();</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-purple-50 p-5 rounded-lg">
                        <h4 className="font-bold text-purple-700 mb-3">–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div className="text-blue-600">{'// –í–∞–ª—ñ–¥–∞—Ü—ñ—è'}</div>
                            <div>class UserValidator</div>
                            <div className="ml-4">Predicate User hasValidEmail = </div>
                            <div className="ml-8">u -&gt; u.getEmail().contains("@");</div>
                            <div className="ml-4">Predicate User isAdult = </div>
                            <div className="ml-8">u -&gt; u.getAge() &gt;= 18;</div>
                            <div className="ml-4">Predicate User isValidUser = </div>
                            <div className="ml-8">hasValidEmail.and(isAdult);</div>
                        </div>
                    </div>

                    <div className="bg-pink-50 p-5 rounded-lg">
                        <h4 className="font-bold text-pink-700 mb-3">BiPredicate T,U</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div className="text-blue-600">{'// –î–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, –ø–æ–≤–µ—Ä—Ç–∞—î boolean'}</div>
                            <div>BiPredicate String, Integer lengthEquals = </div>
                            <div className="ml-4">(s, len) -&gt; s.length() == len;</div>
                            <div>lengthEquals.test("Hello", 5);</div>
                            <div className="text-gray-500">{'// true'}</div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <p className="font-semibold text-gray-800">
                            üí° Predicate - –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —É–º–æ–≤, –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó. –ü—ñ–¥—Ç—Ä–∏–º—É—î –ª–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó and/or/negate.
                        </p>
                    </div>
                </div>
            )
        },
        {
            title: "Method References",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-cyan-500 to-blue-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">Method References</h3>
                        <p className="text-sm mt-1">–©–µ –∫–æ—Ä–æ—Ç—à–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∑–∞–º—ñ—Å—Ç—å lambda</p>
                    </div>

                    <div className="bg-cyan-50 p-5 rounded-lg border-l-4 border-cyan-500">
                        <h4 className="font-bold text-cyan-700 mb-3">4 —Ç–∏–ø–∏ Method References</h4>
                        <div className="grid grid-cols-2 gap-3">
                            <div className="bg-white p-3 rounded">
                                <strong className="text-blue-600">1. Static method</strong>
                                <div className="font-mono text-xs mt-1">ClassName::staticMethod</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-green-600">2. Instance method</strong>
                                <div className="font-mono text-xs mt-1">object::instanceMethod</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-purple-600">3. Instance method –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ</strong>
                                <div className="font-mono text-xs mt-1">ClassName::instanceMethod</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong className="text-orange-600">4. Constructor</strong>
                                <div className="font-mono text-xs mt-1">ClassName::new</div>
                            </div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-blue-50 p-5 rounded-lg">
                            <h4 className="font-bold text-blue-700 mb-3">1. Static method reference</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-red-600">{'// Lambda'}</div>
                                <div>Function String, Integer parser = </div>
                                <div className="ml-4">s -&gt; Integer.parseInt(s);</div>
                                <div className="mt-2 text-green-600">{'// Method reference'}</div>
                                <div>Function String, Integer parser = </div>
                                <div className="ml-4">Integer::parseInt;</div>
                            </div>
                        </div>

                        <div className="bg-green-50 p-5 rounded-lg">
                            <h4 className="font-bold text-green-700 mb-3">2. Instance method reference</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-red-600">{'// Lambda'}</div>
                                <div>Consumer String printer = </div>
                                <div className="ml-4">s -&gt; System.out.println(s);</div>
                                <div className="mt-2 text-green-600">{'// Method reference'}</div>
                                <div>Consumer String printer = </div>
                                <div className="ml-4">System.out::println;</div>
                            </div>
                        </div>

                        <div className="bg-purple-50 p-5 rounded-lg">
                            <h4 className="font-bold text-purple-700 mb-3">3. Instance method –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-red-600">{'// Lambda'}</div>
                                <div>Function String, Integer length = </div>
                                <div className="ml-4">s -&gt; s.length();</div>
                                <div className="mt-2 text-green-600">{'// Method reference'}</div>
                                <div>Function String, Integer length = </div>
                                <div className="ml-4">String::length;</div>
                                <div className="mt-3">Predicate String isEmpty = </div>
                                <div className="ml-4">String::isEmpty;</div>
                            </div>
                        </div>

                        <div className="bg-orange-50 p-5 rounded-lg">
                            <h4 className="font-bold text-orange-700 mb-3">4. Constructor reference</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div className="text-red-600">{'// Lambda'}</div>
                                <div>Supplier List listSupplier = </div>
                                <div className="ml-4">() -&gt; new ArrayList();</div>
                                <div className="mt-2 text-green-600">{'// Method reference'}</div>
                                <div>Supplier List listSupplier = </div>
                                <div className="ml-4">ArrayList::new;</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-400">
                        <p className="font-semibold text-gray-800 mb-2">üí° –ö–æ–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Method Reference?</p>
                        <div className="text-sm text-gray-700">
                            –Ø–∫—â–æ lambda –ø—Ä–æ—Å—Ç–æ –≤–∏–∫–ª–∏–∫–∞—î —ñ—Å–Ω—É—é—á–∏–π –º–µ—Ç–æ–¥ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ method reference. –¶–µ —Ä–æ–±–∏—Ç—å –∫–æ–¥ –∫–æ—Ä–æ—Ç—à–∏–º —Ç–∞ —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—à–∏–º.
                        </div>
                    </div>
                </div>
            )
        },
        {
            title: "–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è: Collections + Functional Interface",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-green-500 to-purple-500 text-white p-4 rounded-lg">
                        <h3 className="text-2xl font-bold">–†–æ–±–æ—Ç–∞ –∑ –∫–æ–ª–µ–∫—Ü—ñ—è–º–∏ —á–µ—Ä–µ–∑ Functional Interface</h3>
                    </div>

                    <div className="bg-green-50 p-5 rounded-lg border-l-4 border-green-500">
                        <h4 className="font-bold text-green-700 mb-3">forEach() - Consumer</h4>
                        <div className="bg-white p-4 rounded font-mono text-sm">
                            <div>List String list = Arrays.asList("Java", "Python", "C++");</div>
                            <div className="mt-2 text-blue-600">{'// –ó lambda'}</div>
                            <div>list.forEach(item -&gt; System.out.println(item));</div>
                            <div className="mt-2 text-blue-600">{'// –ó method reference'}</div>
                            <div>list.forEach(System.out::println);</div>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-blue-50 p-5 rounded-lg">
                            <h4 className="font-bold text-blue-700 mb-3">removeIf() - Predicate</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>List Integer numbers = new ArrayList();</div>
                                <div className="mt-2 text-blue-600">{'// –í–∏–¥–∞–ª–∏—Ç–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ñ'}</div>
                                <div>numbers.removeIf(x -&gt; x &lt; 0);</div>
                                <div className="mt-3">List String names = new ArrayList();</div>
                                <div className="mt-2 text-blue-600">{'// –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ'}</div>
                                <div>names.removeIf(String::isEmpty);</div>
                            </div>
                        </div>

                        <div className="bg-purple-50 p-5 rounded-lg">
                            <h4 className="font-bold text-purple-700 mb-3">replaceAll() - UnaryOperator</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>List String words = new ArrayList();</div>
                                <div className="mt-2 text-blue-600">{'// Uppercase'}</div>
                                <div>words.replaceAll(s -&gt; s.toUpperCase());</div>
                                <div>words.replaceAll(String::toUpperCase);</div>
                                <div className="mt-3">List Integer nums = new ArrayList();</div>
                                <div>nums.replaceAll(x -&gt; x * x);</div>
                            </div>
                        </div>

                        <div className="bg-orange-50 p-5 rounded-lg">
                            <h4 className="font-bold text-orange-700 mb-3">sort() - Comparator</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>List String names = ...</div>
                                <div className="mt-2 text-blue-600">{'// –ü—Ä–∏—Ä–æ–¥–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è'}</div>
                                <div>names.sort(String::compareTo);</div>
                                <div>names.sort(Comparator.naturalOrder());</div>
                                <div className="mt-3 text-blue-600">{'// –ó–∞ –¥–æ–≤–∂–∏–Ω–æ—é'}</div>
                                <div>names.sort(Comparator.comparing(</div>
                                <div className="ml-4">String::length));</div>
                            </div>
                        </div>

                        <div className="bg-pink-50 p-5 rounded-lg">
                            <h4 className="font-bold text-pink-700 mb-3">Map operations</h4>
                            <div className="bg-white p-3 rounded font-mono text-xs">
                                <div>Map String, Integer map = new HashMap();</div>
                                <div className="mt-2 text-blue-600">{'// forEach - BiConsumer'}</div>
                                <div>map.forEach((k, v) -&gt; </div>
                                <div className="ml-4">println(k + "=" + v));</div>
                                <div className="mt-3 text-blue-600">{'// computeIfAbsent - Function'}</div>
                                <div>map.computeIfAbsent("C", </div>
                                <div className="ml-4">k -&gt; k.length());</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-5 rounded-lg border border-yellow-400">
                        <h4 className="font-bold text-yellow-700 mb-3">Comparator - –ø–æ—Ç—É–∂–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ</h4>
                        <div className="bg-white p-4 rounded font-mono text-xs">
                            <div>List User users = getUserList();</div>
                            <div className="mt-2 text-blue-600">{'// –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –≤—ñ–∫–æ–º'}</div>
                            <div>users.sort(Comparator.comparing(User::getAge));</div>
                            <div className="mt-2 text-blue-600">{'// –ó–≤–æ—Ä–æ—Ç–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è'}</div>
                            <div>users.sort(Comparator.comparing(User::getName).reversed());</div>
                            <div className="mt-2 text-blue-600">{'// –°–∫–ª–∞–¥–Ω–µ: –≤—ñ–∫, –ø–æ—Ç—ñ–º —ñ–º\'—è'}</div>
                            <div>users.sort(Comparator.comparing(User::getAge)</div>
                            <div className="ml-8">.thenComparing(User::getName));</div>
                        </div>
                    </div>
                </div>
            )
        },
        {
            title: "–ü—ñ–¥—Å—É–º–æ–∫: Functional Interface",
            content: (
                <div className="space-y-6">
                    <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-6 rounded-lg">
                        <h3 className="text-3xl font-bold mb-4">–ö–ª—é—á–æ–≤—ñ –º–æ–º–µ–Ω—Ç–∏ Functional Interface</h3>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-purple-50 p-5 rounded-lg border-l-4 border-purple-500">
                            <h4 className="font-bold text-purple-700 mb-3">–û—Å–Ω–æ–≤–Ω—ñ FI –∑ java.util.function</h4>
                            <ul className="space-y-2 text-sm text-gray-700">
                                <li>‚Ä¢ <strong>Consumer T</strong> - –ø—Ä–∏–π–º–∞—î, –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î</li>
                                <li>‚Ä¢ <strong>Supplier T</strong> - –Ω–µ –ø—Ä–∏–π–º–∞—î, –ø–æ–≤–µ—Ä—Ç–∞—î</li>
                                <li>‚Ä¢ <strong>Function T,R</strong> - –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î T –≤ R</li>
                                <li>‚Ä¢ <strong>Predicate T</strong> - –ø–µ—Ä–µ–≤—ñ—Ä—è—î —É–º–æ–≤—É</li>
                                <li>‚Ä¢ <strong>UnaryOperator T</strong> - T ‚Üí T</li>
                                <li>‚Ä¢ <strong>BinaryOperator T</strong> - (T,T) ‚Üí T</li>
                            </ul>
                        </div>

                        <div className="bg-blue-50 p-5 rounded-lg border-l-4 border-blue-500">
                            <h4 className="font-bold text-blue-700 mb-3">Lambda —Ç–∞ Method References</h4>
                            <ul className="space-y-2 text-sm text-gray-700">
                                <li>‚Ä¢ Lambda: (params) -&gt; expression</li>
                                <li>‚Ä¢ Static: ClassName::method</li>
                                <li>‚Ä¢ Instance: object::method</li>
                                <li>‚Ä¢ –ù–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ: ClassName::method</li>
                                <li>‚Ä¢ Constructor: ClassName::new</li>
                            </ul>
                        </div>
                    </div>

                    <div className="bg-green-50 p-5 rounded-lg">
                        <h4 className="font-bold text-green-700 mb-3">–ú–µ—Ç–æ–¥–∏ –∫–æ–ª–µ–∫—Ü—ñ–π –∑ FI</h4>
                        <div className="grid grid-cols-2 gap-3 text-sm">
                            <div className="bg-white p-3 rounded">
                                <strong>forEach(Consumer)</strong>
                                <div className="text-gray-600 text-xs">–Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –µ–ª–µ–º–µ–Ω—Ç–∞—Ö</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong>removeIf(Predicate)</strong>
                                <div className="text-gray-600 text-xs">–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞ —É–º–æ–≤–æ—é</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong>replaceAll(UnaryOperator)</strong>
                                <div className="text-gray-600 text-xs">–ó–∞–º—ñ–Ω–∞ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤</div>
                            </div>
                            <div className="bg-white p-3 rounded">
                                <strong>sort(Comparator)</strong>
                                <div className="text-gray-600 text-xs">–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è</div>
                            </div>
                        </div>
                    </div>

                    <div className="bg-yellow-50 p-5 rounded-lg border border-yellow-400">
                        <h4 className="font-bold text-yellow-700 mb-3">–ü–∞–º'—è—Ç–∞–π—Ç–µ</h4>
                        <ul className="space-y-2 text-gray-700">
                            <li>‚úì Functional Interface –º–∞—î –û–î–ò–ù –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥</li>
                            <li>‚úì Lambda —Ä–æ–±–ª—è—Ç—å –∫–æ–¥ –∫–æ–º–ø–∞–∫—Ç–Ω—ñ—à–∏–º —Ç–∞ –≤–∏—Ä–∞–∑–Ω—ñ—à–∏–º</li>
                            <li>‚úì Method references —â–µ –∫–æ—Ä–æ—Ç—à—ñ –∑–∞ lambda</li>
                            <li>‚úì –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≤–±—É–¥–æ–≤–∞–Ω—ñ FI –∑–∞–º—ñ—Å—Ç—å –≤–ª–∞—Å–Ω–∏—Ö</li>
                            <li>‚úì –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è —Ñ—É–Ω–∫—Ü—ñ–π —á–µ—Ä–µ–∑ andThen/compose</li>
                        </ul>
                    </div>

                    <div className="text-center bg-purple-100 p-4 rounded-lg">
                        <p className="text-lg font-semibold text-purple-800">
                            Functional Interface + Lambda = —Å—É—á–∞—Å–Ω–∏–π —Ç–∞ –µ–ª–µ–≥–∞–Ω—Ç–Ω–∏–π Java –∫–æ–¥! üöÄ
                        </p>
                    </div>
                </div>
            )
        }
    ];

    const nextSlide = () => {
        setCurrentSlide((prev) => (prev + 1) % slides.length);
    };

    const prevSlide = () => {
        setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-blue-50 p-8">
            <div className="max-w-6xl mx-auto">
                <div className="bg-white rounded-2xl shadow-2xl p-12 min-h-[700px] flex flex-col">
                    <div className="mb-8">
                        <h1 className="text-4xl font-bold text-gray-800 mb-2">{slides[currentSlide].title}</h1>
                        {slides[currentSlide].subtitle && (
                            <p className="text-lg text-gray-600">{slides[currentSlide].subtitle}</p>
                        )}
                        <div className="h-1 w-32 bg-gradient-to-r from-purple-500 via-pink-500 to-blue-500 rounded mt-3"></div>
                    </div>

                    <div className="flex-grow overflow-y-auto">
                        {slides[currentSlide].content}
                    </div>

                    <div className="flex justify-between items-center mt-8 pt-6 border-t">
                        <button
                            onClick={prevSlide}
                            disabled={currentSlide === 0}
                            className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg hover:from-purple-600 hover:to-pink-600 disabled:from-gray-300 disabled:to-gray-300 disabled:cursor-not-allowed transition-all shadow-lg hover:shadow-xl"
                        >
                            <ChevronLeft size={20} />
                            –ù–∞–∑–∞–¥
                        </button>

                        <div className="flex gap-2">
                            {slides.map((_, index) => (
                                <button
                                    key={index}
                                    onClick={() => setCurrentSlide(index)}
                                    className={`h-3 rounded-full transition-all ${index === currentSlide
                                            ? 'bg-gradient-to-r from-purple-500 to-pink-500 w-8'
                                            : 'bg-gray-300 hover:bg-gray-400 w-3'
                                        }`}
                                    title={`–°–ª–∞–π–¥ ${index + 1}`}
                                />
                            ))}
                        </div>

                        <button
                            onClick={nextSlide}
                            disabled={currentSlide === slides.length - 1}
                            className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg hover:from-purple-600 hover:to-pink-600 disabled:from-gray-300 disabled:to-gray-300 disabled:cursor-not-allowed transition-all shadow-lg hover:shadow-xl"
                        >
                            –í–ø–µ—Ä–µ–¥
                            <ChevronRight size={20} />
                        </button>
                    </div>

                    <div className="text-center mt-4 text-sm text-gray-500">
                        –°–ª–∞–π–¥ {currentSlide + 1} –∑ {slides.length}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default FunctionalPresentation;